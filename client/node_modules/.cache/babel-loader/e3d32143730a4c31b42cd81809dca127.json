{"ast":null,"code":"var _jsxFileName = \"E:\\\\Book-lover-Git\\\\Book-lovers.com\\\\client\\\\src\\\\components\\\\books-section\\\\book-list.js\";\nimport React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport AddReviewModal from \"../../Utlies/modals/add-review-modals\";\nimport RightPanel from \"../../Utlies/right-panel/right-panel.js\";\nimport Loading from \"../../Utlies/loader/loader\";\nimport { Button } from \"reactstrap\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_REVIEW } from \"../../gql-helper/queries\";\nimport \"./book-list.css\";\nimport { FilterContext } from \"../../context-helper/context-helper\";\n\nfunction Image(props) {\n  const {\n    book\n  } = props;\n  const {\n    imgId,\n    title\n  } = book;\n  const [imgSrc, setImgSrc] = useState(\"\");\n  useEffect(() => {\n    getImgSrc();\n    return () => {};\n  }, []);\n\n  async function getImgSrc() {\n    if (imgId) {\n      await fetch(\"https://api.jsonbin.io/b/\" + imgId, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n          \"secret-key\": \"$2b$10$rhIFVqhUIEQwsbi0CwHLMe6jxkKyBD3otM2McKelyCAyWXJyFWQ7G\"\n        }\n      }).then(async response => {\n        let result = await response.json();\n\n        if (result.imgSrc) {\n          setImgSrc(result.imgSrc);\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: imgSrc,\n    width: \"100%\",\n    height: \"100%\",\n    className: \"img-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function (props) {\n  const {\n    searchedText\n  } = props;\n  const [showModal, setShowModal] = useState(false),\n        [showRightPanel, setShowRightPanel] = useState(false),\n        [headerText, setHeaderText] = useState(\"Book reviews\"),\n        [query, setQuery] = useState({}),\n        [bookReviews, setBookReviews] = useState([]),\n        [selectedReviewId, setSelectedReviewId] = useState([]);\n  const {\n    rootGenre,\n    authorFilter: {\n      rootAuthorFilter\n    },\n    userId,\n    loginModal,\n    addReviewBtn\n  } = useContext(FilterContext),\n        {\n    setShowLoginModal\n  } = loginModal,\n        {\n    addReviewBtnClicked,\n    setAddReviewBtnClicked\n  } = addReviewBtn,\n        {\n    loading,\n    data,\n    refetch\n  } = useQuery(GET_REVIEW, {\n    variables: {\n      query: query\n    }\n  });\n\n  const showAddReviewModal = value => {\n    if (userId) setShowModal(value);else if (setShowLoginModal) {\n      setShowLoginModal(true);\n      setAddReviewBtnClicked(true); // show add review modal after log in\n    }\n  };\n\n  const showRPanel = reviewId => {\n    setShowRightPanel(!showRightPanel);\n    console.log(\"reviewId \", reviewId);\n    ;\n    setSelectedReviewId(reviewId);\n    console.log(\"selectedReviewId \", selectedReviewId);\n  };\n\n  const filterAndUpdate = () => {\n    let reviews = data && data.reviews && data.reviews.length > 0 ? data.reviews : [];\n\n    if (reviews && searchedText) {\n      let filteredReviews = reviews.filter(bookReview => {\n        setHeaderText(\"Filtered book reviews\");\n        return bookReview.title.toLowerCase().includes(searchedText.toLowerCase()) ? bookReview : \"\";\n      });\n      setBookReviews(filteredReviews);\n    } else {\n      setBookReviews(reviews);\n      setHeaderText(\"Book reviews\");\n    }\n  };\n\n  const userIdAdded = useMemo(() => ({\n    addReviewBtnClicked,\n    userId\n  }), [addReviewBtnClicked, userId]);\n  useEffect(() => {\n    filterAndUpdate();\n\n    if (rootGenre) {\n      query.genre = rootGenre;\n      setQuery(query);\n    } else {\n      delete query.genre;\n    }\n\n    if (rootAuthorFilter) {\n      query.author = rootAuthorFilter;\n      setQuery(query);\n    } else {\n      delete query.author;\n    }\n\n    refetch(query);\n\n    if (addReviewBtnClicked && userId) {\n      showAddReviewModal(true);\n      setAddReviewBtnClicked(false);\n    }\n\n    return () => {};\n  }, [searchedText, data, rootGenre, rootAuthorFilter, userIdAdded]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row header-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-3 col-sm-3 col-md-3 col-lg-3 header-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, headerText), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-1 col-sm-1 col-md-1 col-lg-1 header-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-8 col-sm-8 col-md-8 col-lg-8\",\n    style: {\n      textAlign: \"end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: e => showAddReviewModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), \" Add review\"))), loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 18\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, bookReviews && bookReviews.length > 0 ? bookReviews.map((book, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-4 col-lg-4 \",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"book-container\",\n      onClick: e => showRPanel(book._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-4 col-sm-4 col-md-4 col-lg-4\",\n      style: {\n        padding: \"0px\"\n      },\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, book.imgId ? /*#__PURE__*/React.createElement(Image, {\n      book: book,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://images.pexels.com/photos/965340/pexels-photo-965340.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n      width: \"100%\",\n      height: \"100%\",\n      className: \"img-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-9 col-sm-9 col-md-9 col-lg-9\",\n      style: {\n        paddingLeft: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"book-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        borderBottom: \"1px solid #eee\",\n        textAlign: \"start\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, book.title)), book.author && book.author.name ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row author-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 27\n      }\n    }, \"By: \", \" \" + book.author.name)) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row genre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, \"Genre: \", \" \" + book.genre))))));\n  }) : !loading ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"not-found-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, \"No review found..\") : null), showModal ? /*#__PURE__*/React.createElement(AddReviewModal, {\n    closeModal: showAddReviewModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 20\n    }\n  }) : null, showRightPanel ? /*#__PURE__*/React.createElement(RightPanel, {\n    setShowRightPanel: setShowRightPanel,\n    selectedReviewId: selectedReviewId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }) : null);\n}","map":{"version":3,"sources":["E:/Book-lover-Git/Book-lovers.com/client/src/components/books-section/book-list.js"],"names":["React","useState","useEffect","useContext","useMemo","AddReviewModal","RightPanel","Loading","Button","useQuery","GET_REVIEW","FilterContext","Image","props","book","imgId","title","imgSrc","setImgSrc","getImgSrc","fetch","method","headers","then","response","result","json","searchedText","showModal","setShowModal","showRightPanel","setShowRightPanel","headerText","setHeaderText","query","setQuery","bookReviews","setBookReviews","selectedReviewId","setSelectedReviewId","rootGenre","authorFilter","rootAuthorFilter","userId","loginModal","addReviewBtn","setShowLoginModal","addReviewBtnClicked","setAddReviewBtnClicked","loading","data","refetch","variables","showAddReviewModal","value","showRPanel","reviewId","console","log","filterAndUpdate","reviews","length","filteredReviews","filter","bookReview","toLowerCase","includes","userIdAdded","genre","author","textAlign","e","map","index","_id","padding","paddingLeft","borderBottom","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useMemo } from \"react\";\r\n\r\nimport AddReviewModal from \"../../Utlies/modals/add-review-modals\";\r\nimport RightPanel from \"../../Utlies/right-panel/right-panel.js\";\r\nimport Loading from \"../../Utlies/loader/loader\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_REVIEW } from \"../../gql-helper/queries\";\r\n\r\nimport \"./book-list.css\";\r\nimport { FilterContext } from \"../../context-helper/context-helper\";\r\n\r\nfunction Image(props) {\r\n  const { book } = props;\r\n  const { imgId, title } = book;\r\n  const [imgSrc, setImgSrc] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getImgSrc();\r\n    return () => {};\r\n  }, []);\r\n\r\n  async function getImgSrc() {\r\n    if (imgId) {\r\n      await fetch(\"https://api.jsonbin.io/b/\" + imgId, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          \"secret-key\":\r\n            \"$2b$10$rhIFVqhUIEQwsbi0CwHLMe6jxkKyBD3otM2McKelyCAyWXJyFWQ7G\",\r\n        },\r\n      }).then(async (response) => {\r\n        let result = await response.json();\r\n\r\n        if (result.imgSrc) {\r\n          setImgSrc(result.imgSrc);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img src={imgSrc} width=\"100%\" height=\"100%\" className=\"img-container\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function (props) {\r\n  const { searchedText } = props;\r\n  const [showModal, setShowModal] = useState(false),\r\n    [showRightPanel, setShowRightPanel] = useState(false),\r\n    [headerText, setHeaderText] = useState(\"Book reviews\"),\r\n    [query, setQuery] = useState({}),\r\n    [bookReviews, setBookReviews] = useState([]),\r\n    [selectedReviewId, setSelectedReviewId] = useState([]);\r\n\r\n    \r\n\r\n  const {\r\n      rootGenre,\r\n      authorFilter: { rootAuthorFilter },\r\n      userId,\r\n      loginModal,\r\n      addReviewBtn\r\n    } = useContext(FilterContext),\r\n    { setShowLoginModal } = loginModal,\r\n    { addReviewBtnClicked,setAddReviewBtnClicked } = addReviewBtn,\r\n    { loading, data, refetch } = useQuery(GET_REVIEW, {\r\n      variables: { query: query },\r\n    });\r\n\r\n  const showAddReviewModal = (value) => {\r\n\r\n    if (userId) setShowModal(value);\r\n    else if (setShowLoginModal) {\r\n      setShowLoginModal(true);\r\n      setAddReviewBtnClicked(true); // show add review modal after log in\r\n    }\r\n  };\r\n\r\n \r\n\r\n  const showRPanel = (reviewId) => {\r\n    setShowRightPanel(!showRightPanel);\r\n\r\n    console.log(\"reviewId \",reviewId);;\r\n    setSelectedReviewId(reviewId);\r\n\r\n    console.log(\"selectedReviewId \",selectedReviewId);\r\n  };\r\n\r\n  const filterAndUpdate = () => {\r\n    let reviews =\r\n      data && data.reviews && data.reviews.length > 0 ? data.reviews : [];\r\n\r\n    if (reviews && searchedText) {\r\n      let filteredReviews = reviews.filter((bookReview) => {\r\n        setHeaderText(\"Filtered book reviews\");\r\n        return bookReview.title\r\n          .toLowerCase()\r\n          .includes(searchedText.toLowerCase())\r\n          ? bookReview\r\n          : \"\";\r\n      });\r\n      setBookReviews(filteredReviews);\r\n    } else {\r\n      setBookReviews(reviews);\r\n      setHeaderText(\"Book reviews\");\r\n    }\r\n  };\r\n\r\n  const userIdAdded = useMemo(\r\n    () => ({ addReviewBtnClicked, userId }),\r\n    [addReviewBtnClicked, userId]\r\n  )\r\n\r\n  useEffect(() => {\r\n    filterAndUpdate();\r\n    if (rootGenre) {\r\n      query.genre = rootGenre;\r\n      setQuery(query);\r\n    } else {\r\n      delete query.genre;\r\n    }\r\n    if (rootAuthorFilter) {\r\n      query.author = rootAuthorFilter;\r\n      setQuery(query);\r\n    } else {\r\n      delete query.author;\r\n    }\r\n    refetch(query);\r\n\r\n    if(addReviewBtnClicked && userId){\r\n      showAddReviewModal(true);\r\n      setAddReviewBtnClicked(false);\r\n    }\r\n\r\n    return () => {};\r\n  }, [searchedText, data, rootGenre, rootAuthorFilter, userIdAdded]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row header-row\">\r\n        <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3 header-text\">\r\n          <h5>{headerText}</h5>{\" \"}\r\n        </div>\r\n        <div className=\"col-xs-1 col-sm-1 col-md-1 col-lg-1 header-text\"> </div>\r\n        <div\r\n          className=\"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\r\n          style={{ textAlign: \"end\" }}\r\n        >\r\n          <div className=\"btn-container\"></div>\r\n          <Button onClick={(e) => showAddReviewModal(true)}>\r\n            <i className=\"fas fa-plus\"></i> Add review\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {loading ? <Loading /> : null}\r\n      <div className=\"row\">\r\n        {bookReviews && bookReviews.length > 0 ? (\r\n          bookReviews.map((book, index) => {\r\n            return (\r\n              <div\r\n                className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4 \"\r\n                key={index}\r\n              >\r\n                <div className=\"book-container\" onClick={(e) => showRPanel(book._id)}>\r\n                  <div\r\n                    className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\"\r\n                    style={{ padding: \"0px\" }}\r\n                    key={index}\r\n                  >\r\n                    {book.imgId ? (\r\n                      <Image book={book} />\r\n                    ) : (\r\n                      <img\r\n                        src=\"https://images.pexels.com/photos/965340/pexels-photo-965340.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        className=\"img-container\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9\"\r\n                    style={{ paddingLeft: \"0px\" }}\r\n                  >\r\n                    <div className=\"book-description\">\r\n                      <div\r\n                        className=\"row\"\r\n                        style={{ borderBottom: \"1px solid #eee\",textAlign: \"start\"}}\r\n                      >\r\n                        <h5>{book.title}</h5>\r\n                      </div>\r\n\r\n                      {book.author && book.author.name ? (\r\n                        <div className=\"row author-name\">\r\n                          <p>By: {\" \" + book.author.name}</p>\r\n                        </div>\r\n                      ) : null}\r\n                      <div className=\"row genre\">\r\n                        <p>Genre: {\" \" + book.genre}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : !loading ? (\r\n          <span className=\"not-found-msg\">No review found..</span>\r\n        ) : null}\r\n      </div>\r\n\r\n      {showModal ? <AddReviewModal closeModal={showAddReviewModal} /> : null}\r\n      {showRightPanel ? (\r\n        <RightPanel setShowRightPanel={setShowRightPanel} selectedReviewId={selectedReviewId}/>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}