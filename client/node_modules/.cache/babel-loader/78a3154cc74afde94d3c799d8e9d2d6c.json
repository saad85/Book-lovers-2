{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\add-review-modals.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Tooltip } from \"reactstrap\";\nimport \"./add-review-modal.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport CustomDropdown from \"./dropdown/dropdown\";\nimport CustomGenreDropdown from \"./dropdown/dropdown\";\nimport { useDropzone } from 'react-dropzone';\nimport { ADD_REVIEW, ADD_AUTHOR, AUTHORS, GET_REVIEW } from \"../gql-helper/queries\";\n\nconst AddReviewModal = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [desc, setDesc] = useState(true);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showAddNewAurthor, setShowAddNewAurthor] = useState(false);\n  const [readOnly, setReadOnly] = useState(false);\n  const [authorsList, setAuthorsList] = useState([]);\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\n  const [hasAllMandatoryFields, setHasAllMandatoryFields] = useState(true);\n  const [titleReq, setTitleReq] = useState(true);\n  const [authorReq, setAuthorReq] = useState(true);\n  const [imgSrc, setImgSrc] = useState('');\n  const [addTooltipOpen, setAddTooltipOpen] = useState(false);\n  const [backTooltipOpen, setBackTooltipOpen] = useState(false);\n\n  const addToggleTooltip = () => setAddTooltipOpen(!addTooltipOpen);\n\n  const backToggleTooltip = () => setBackTooltipOpen(!backTooltipOpen);\n\n  const [addReview, {\n    reviewData\n  }] = useMutation(ADD_REVIEW);\n  const [addAuthor, {\n    authordata\n  }] = useMutation(ADD_AUTHOR);\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(AUTHORS);\n  const genreList = [\"Action and adventure\", \"Bio-graphy\", \"Children's\", \"Graphic novel\", \"Poetry\", \"Political thriller\", \"Science fiction\"];\n\n  const toggle = () => setModal(!modal);\n\n  function setAuthorFromDropdown(text, value) {\n    setSelectedAuthor(value);\n  }\n\n  function setGenreFromDropdown(text, value) {\n    setGenre(value);\n  }\n\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    console.log(\"acceptedFiles \", acceptedFiles);\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log('file reading was aborted');\n\n    reader.onerror = () => console.log('file reading has failed');\n\n    reader.onload = fileLoadEvent => {\n      let srcData = fileLoadEvent.target.result; // Do whatever you want with the file contents\n\n      const binaryStr = reader.result;\n      console.log(\"binaryStr \", binaryStr);\n      console.log(\"fileLoadEvent \", fileLoadEvent);\n      console.log(\"srcData \", srcData);\n      setImgSrc(srcData);\n    };\n\n    let readFile = reader.readAsArrayBuffer(acceptedFiles[0]);\n    console.log(\"readFile\", readFile);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n\n  function closeModal() {\n    setModal(!modal);\n\n    if (props.closeModal) {\n      setTimeout(() => {\n        props.closeModal(false);\n      }, 100);\n    }\n  } // var myDropzone = new Dropzone(\"div#myId\", { url: \"/file/post\"});\n\n\n  useEffect(() => {\n    if (props.updateReview) props.updateReview();\n\n    if (data && data.authors && data.authors.length > 0) {\n      setAuthorsList(data.authors);\n    } //form validation\n\n\n    if (title.length > 0 && selectedAuthor.length > 0) {\n      setHasAllMandatoryFields(false);\n    }\n\n    if (title) setTitleReq(false);\n    if (selectedAuthor) setAuthorReq(false);\n    return () => {};\n  }, [data, title, selectedAuthor]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    onClosed: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    style: {\n      backgroundColor: \"#f7f7f7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Add review\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"dropzone\",\n    id: \"my-awesome-dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Title:\", \" \", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"add a title\",\n    onChange: e => {\n      setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }), titleReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"req-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 27\n    }\n  }, \"*Required field\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Author:\", !showAddNewAurthor ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomDropdown, {\n    dropdownId: \"author\",\n    menus: authorsList,\n    setParentsAuthor: setAuthorFromDropdown,\n    context: \"authors\",\n    placeholder: \"Select author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }), \" \", \"or\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"add-new-aurthor\",\n    onClick: e => setShowAddNewAurthor(!showAddNewAurthor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    style: {\n      fontSize: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 23\n    }\n  }), \" Add new\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"col-xs-7 col-sm-7 col-md-7 col-lg-7  \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"add new author\",\n    readOnly: readOnly,\n    onChange: e => {\n      setAuthor(e.target.value);\n    },\n    style: {\n      marginTop: \"10px\"\n    },\n    value: author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\",\n    id: \"addIcon\",\n    onClick: e => {\n      addAuthor({\n        variables: {\n          authorName: author\n        },\n        refetchQueries: [{\n          query: AUTHORS\n        }]\n      });\n      setShowAddNewAurthor(!showAddNewAurthor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\",\n    id: \"backIcon\",\n    onClick: e => setShowAddNewAurthor(!showAddNewAurthor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }), authorReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"req-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 28\n    }\n  }, \"*Required field\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"Genre:\", \" \", /*#__PURE__*/React.createElement(CustomGenreDropdown, {\n    dropdownId: \"genre\",\n    menus: genreList,\n    setParentsGenre: setGenreFromDropdown,\n    context: \"genre\",\n    placeholder: \"Select genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"How was it:\", \" \", /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Short summary\",\n    style: {\n      width: \"100%\"\n    },\n    onChange: e => {\n      setDesc(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, \"Drop the files here ...\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"))), /*#__PURE__*/React.createElement(\"img\", {\n    src: imgSrc,\n    width: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    disabled: hasAllMandatoryFields,\n    onClick: e => {\n      closeModal();\n      addReview({\n        variables: {\n          title: title,\n          author: selectedAuthor,\n          genre: genre,\n          desc: desc\n        },\n        refetchQueries: [{\n          query: GET_REVIEW\n        }]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }), \" Add\"))));\n};\n\nexport default AddReviewModal;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/add-review-modals.js"],"names":["React","useState","useEffect","useCallback","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Tooltip","useMutation","useQuery","CustomDropdown","CustomGenreDropdown","useDropzone","ADD_REVIEW","ADD_AUTHOR","AUTHORS","GET_REVIEW","AddReviewModal","props","className","modal","setModal","title","setTitle","author","setAuthor","genre","setGenre","desc","setDesc","showDropdown","setShowDropdown","showAddNewAurthor","setShowAddNewAurthor","readOnly","setReadOnly","authorsList","setAuthorsList","selectedAuthor","setSelectedAuthor","hasAllMandatoryFields","setHasAllMandatoryFields","titleReq","setTitleReq","authorReq","setAuthorReq","imgSrc","setImgSrc","addTooltipOpen","setAddTooltipOpen","backTooltipOpen","setBackTooltipOpen","addToggleTooltip","backToggleTooltip","addReview","reviewData","addAuthor","authordata","error","loading","data","genreList","toggle","setAuthorFromDropdown","text","value","setGenreFromDropdown","onDrop","acceptedFiles","console","log","reader","FileReader","onabort","onerror","onload","fileLoadEvent","srcData","target","result","binaryStr","readFile","readAsArrayBuffer","getRootProps","getInputProps","isDragActive","closeModal","setTimeout","updateReview","authors","length","backgroundColor","e","fontSize","marginTop","variables","authorName","refetchQueries","query","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport \"./add-review-modal.css\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport CustomDropdown from \"./dropdown/dropdown\";\r\nimport CustomGenreDropdown from \"./dropdown/dropdown\";\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nimport {\r\n  ADD_REVIEW,\r\n  ADD_AUTHOR,\r\n  AUTHORS,\r\n  GET_REVIEW,\r\n} from \"../gql-helper/queries\";\r\n\r\nconst AddReviewModal = (props) => {\r\n  const { className } = props;\r\n\r\n  const [modal, setModal] = useState(true);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [desc, setDesc] = useState(true);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [showAddNewAurthor, setShowAddNewAurthor] = useState(false);\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [authorsList, setAuthorsList] = useState([]);\r\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\r\n  const [hasAllMandatoryFields, setHasAllMandatoryFields] = useState(true);\r\n  const [titleReq, setTitleReq] = useState(true);\r\n  const [authorReq, setAuthorReq] = useState(true);\r\n  const [imgSrc, setImgSrc] = useState('');\r\n\r\n  const [addTooltipOpen, setAddTooltipOpen] = useState(false);\r\n  const [backTooltipOpen, setBackTooltipOpen] = useState(false);\r\n\r\n  const addToggleTooltip = () => setAddTooltipOpen(!addTooltipOpen);\r\n  const backToggleTooltip = () => setBackTooltipOpen(!backTooltipOpen);\r\n\r\n  const [addReview, { reviewData }] = useMutation(ADD_REVIEW);\r\n  const [addAuthor, { authordata }] = useMutation(ADD_AUTHOR);\r\n  const { error, loading, data } = useQuery(AUTHORS);\r\n\r\n  const genreList = [\r\n    \"Action and adventure\",\r\n    \"Bio-graphy\",\r\n    \"Children's\",\r\n    \"Graphic novel\",\r\n    \"Poetry\",\r\n    \"Political thriller\",\r\n    \"Science fiction\"\r\n  ];\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  function setAuthorFromDropdown(text, value) {\r\n    setSelectedAuthor(value);\r\n\r\n  }\r\n\r\n  function setGenreFromDropdown(text, value){\r\n    setGenre(value);\r\n    \r\n  }\r\n\r\n  \r\n    const onDrop = useCallback(acceptedFiles => {\r\n      // Do something with the files\r\n\r\n      console.log(\"acceptedFiles \",acceptedFiles);\r\n\r\n      const reader = new FileReader()\r\n \r\n      reader.onabort = () => console.log('file reading was aborted')\r\n      reader.onerror = () => console.log('file reading has failed')\r\n      reader.onload = (fileLoadEvent) => {\r\n\r\n        let srcData = fileLoadEvent.target.result;\r\n      // Do whatever you want with the file contents\r\n        const binaryStr = reader.result\r\n        console.log(\"binaryStr \",binaryStr)\r\n        console.log(\"fileLoadEvent \",fileLoadEvent)\r\n        console.log(\"srcData \",srcData);\r\n\r\n        setImgSrc(srcData);\r\n      }\r\n     let readFile = reader.readAsArrayBuffer(acceptedFiles[0]);\r\n     console.log(\"readFile\",readFile)\r\n    }, [])\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n  \r\n\r\n  function closeModal() {\r\n    setModal(!modal);\r\n\r\n    if (props.closeModal) {\r\n      setTimeout(() => {\r\n        props.closeModal(false);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  // var myDropzone = new Dropzone(\"div#myId\", { url: \"/file/post\"});\r\n\r\n  useEffect(() => {\r\n    if (props.updateReview) props.updateReview();\r\n\r\n    if (data && data.authors && data.authors.length > 0) {\r\n      setAuthorsList(data.authors);\r\n    }\r\n\r\n    //form validation\r\n    if (title.length > 0 && selectedAuthor.length > 0) {\r\n      setHasAllMandatoryFields(false);\r\n    }\r\n\r\n    if(title) setTitleReq(false);\r\n    if(selectedAuthor) setAuthorReq(false);\r\n\r\n    return () => {};\r\n  }, [data, title, selectedAuthor]);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        className={className}\r\n        onClosed={() => closeModal()}\r\n      >\r\n        <ModalHeader toggle={toggle} style={{ backgroundColor: \"#f7f7f7\" }}>\r\n          Add review\r\n        </ModalHeader>\r\n        <ModalBody>\r\n\r\n        <button \r\n      className=\"dropzone\"\r\n      id=\"my-awesome-dropzone\"></button>\r\n          <div>\r\n            <div className=\"form-field\">\r\n              Title:{\" \"}\r\n              <Input\r\n                placeholder=\"add a title\"\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n              />\r\n\r\n              {titleReq ? <span className=\"req-class\">*Required field</span> : null}\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              Author:\r\n              {!showAddNewAurthor ? (\r\n                <div>\r\n                  <>\r\n                    <CustomDropdown\r\n                      dropdownId=\"author\"\r\n                      menus={authorsList}\r\n                      setParentsAuthor={setAuthorFromDropdown}\r\n                      context=\"authors\"\r\n                      placeholder=\"Select author\"\r\n                    />{\" \"}\r\n                    or{\" \"}\r\n                    <span\r\n                      className=\"add-new-aurthor\" \r\n                      onClick={(e) => setShowAddNewAurthor(!showAddNewAurthor)}\r\n                    >\r\n                      <i className=\"fas fa-plus\" style={{fontSize: \"12px\"}}></i> Add new\r\n                    </span>\r\n                  </>\r\n                </div>\r\n              ) : (\r\n                <span className=\"row\">\r\n                  <span className=\"col-xs-7 col-sm-7 col-md-7 col-lg-7  \">\r\n                    <Input\r\n                      placeholder=\"add new author\"\r\n                      readOnly={readOnly}\r\n                      onChange={(e) => {\r\n                        setAuthor(e.target.value);\r\n                      }}\r\n                      style={{ marginTop: \"10px\" }}\r\n                      value={author}\r\n                    />\r\n                  </span>\r\n                  <span\r\n                    className=\" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\"\r\n                    id=\"addIcon\"\r\n                    onClick={(e) => {\r\n                      addAuthor({\r\n                        variables: { authorName: author },\r\n                        refetchQueries: [{ query: AUTHORS }],\r\n                      });setShowAddNewAurthor(!showAddNewAurthor);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-plus\"></i>\r\n                  </span>\r\n                  <span\r\n                    className=\" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\"\r\n                    id=\"backIcon\"\r\n                    onClick={(e) => setShowAddNewAurthor(!showAddNewAurthor)}\r\n                  >\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                  </span>\r\n\r\n                  {/* <Tooltip placement=\"bottom\" isOpen={addTooltipOpen} target=\"addIcon\" toggle={addToggleTooltip}>\r\n                            Add \r\n                          </Tooltip>\r\n                          <Tooltip placement=\"bottom\" isOpen={backTooltipOpen} target=\"backIcon\" toggle={backToggleTooltip}>\r\n                            Back\r\n                          </Tooltip> */}\r\n                </span>\r\n              )}\r\n              <div></div>\r\n\r\n              {authorReq ? <span className=\"req-class\">*Required field</span> : null}\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              Genre:{\" \"}\r\n              {/* <Input\r\n                placeholder=\"add genre\"\r\n                onClick={(e) => setShowDropdown(true)}\r\n                onChange={(e) => {\r\n                  setGenre(e.target.value);\r\n                }}\r\n              /> */}\r\n              <CustomGenreDropdown\r\n                dropdownId=\"genre\"\r\n                menus={genreList}\r\n                setParentsGenre={setGenreFromDropdown}\r\n                context=\"genre\"\r\n                placeholder=\"Select genre\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              How was it:{\" \"}\r\n              <textarea\r\n                placeholder=\"Short summary\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={(e) => {\r\n                  setDesc(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          {\r\n            isDragActive ?\r\n              <p>Drop the files here ...</p> :\r\n              <p>Drag 'n' drop some files here, or click to select files</p>\r\n          }\r\n        </div>\r\n          </div>\r\n\r\n          <img src={imgSrc} width=\"50\"/>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"secondary\"\r\n            disabled={hasAllMandatoryFields}\r\n            onClick={(e) => {\r\n              closeModal();\r\n              addReview({\r\n                variables: {\r\n                  title: title,\r\n                  author: selectedAuthor,\r\n                  genre: genre,\r\n                  desc: desc,\r\n                },\r\n                refetchQueries: [{ query: GET_REVIEW }],\r\n              });\r\n            }}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Add\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReviewModal;\r\n"]},"metadata":{},"sourceType":"module"}