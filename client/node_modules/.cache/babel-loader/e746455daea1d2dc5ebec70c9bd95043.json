{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-in-form.js\";\nimport { useMutation } from \"@apollo/client\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { ADD_USER } from \"../../gql-helper/queries\";\nimport './sign-up-form.css';\nexport default function SignUp(props) {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [retypedPassword, setRetypedPassword] = useState('');\n  const [userNameReq, setUserNameReq] = useState(false);\n  const [emailReq, setEmailReq] = useState(false);\n  const [passwordReq, setPasswordReq] = useState(false);\n  const [retypedPasswordReq, setRetypedPasswordReq] = useState(false);\n  const [passwordMismatched, setPasswordMismatched] = useState(false);\n  const [addUser] = useMutation(ADD_USER);\n\n  const registerUser = async () => {\n    if (isFormValidated()) await addUser();else return false;\n  };\n\n  const isFormValidated = () => {\n    if (!username) {\n      setUserNameReq(true);\n      return false;\n    }\n\n    if (!email) {\n      setEmailReq(true);\n      return false;\n    }\n\n    if (!password) {\n      setPasswordReq(true);\n      return false;\n    }\n\n    if (!retypedPassword) {\n      setRetypedPasswordReq(true);\n      return false;\n    }\n\n    if (password !== retypedPassword) {\n      setPasswordMismatched(false);\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"login-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    className: \"signupInput\",\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"E-mail\",\n    className: \"signupInput\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    className: \"signupInput\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    placeholder: \"Retype password\",\n    className: \"signupInput\",\n    onChange: e => setRetypedPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"signup_submit\",\n    value: \"Sign me up\",\n    onClick: e => isFormValidated() ? addUser({\n      variables: {\n        name: username,\n        email: email,\n        password: password\n      }\n    }) : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["E:/graphQl/client/src/components/sign-up/sign-in-form.js"],"names":["useMutation","React","useState","useEffect","useContext","ADD_USER","SignUp","props","username","setUsername","email","setEmail","password","setPassword","retypedPassword","setRetypedPassword","userNameReq","setUserNameReq","emailReq","setEmailReq","passwordReq","setPasswordReq","retypedPasswordReq","setRetypedPasswordReq","passwordMismatched","setPasswordMismatched","addUser","registerUser","isFormValidated","e","target","value","variables","name"],"mappings":";AACA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAO,oBAAP;AAIA,eAAe,SAASC,MAAT,CAAiBC,KAAjB,EAAwB;AAErC,QAAM,CAAEC,QAAF,EAAaC,WAAb,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEQ,KAAF,EAAUC,QAAV,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEU,QAAF,EAAaC,WAAb,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEY,eAAF,EAAoBC,kBAApB,IAA0Cb,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAEc,WAAF,EAAgBC,cAAhB,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAEgB,QAAF,EAAaC,WAAb,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAEkB,WAAF,EAAgBC,cAAhB,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAEoB,kBAAF,EAAuBC,qBAAvB,IAAgDrB,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAAEsB,kBAAF,EAAuBC,qBAAvB,IAAgDvB,QAAQ,CAAC,KAAD,CAA9D;AAEA,QAAM,CAACwB,OAAD,IAAY1B,WAAW,CAACK,QAAD,CAA7B;;AAGA,QAAOsB,YAAY,GAAG,YAAW;AAE/B,QAAGC,eAAe,EAAlB,EAAsB,MAAMF,OAAO,EAAb,CAAtB,KACK,OAAO,KAAP;AAEN,GALD;;AAOA,QAAME,eAAe,GAAG,MAAK;AAE3B,QAAG,CAACpB,QAAJ,EAAa;AAEXS,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,aAAO,KAAP;AACD;;AACD,QAAG,CAACP,KAAJ,EAAW;AAETS,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA,aAAO,KAAP;AACD;;AACD,QAAG,CAACP,QAAJ,EAAc;AAEZS,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,aAAO,KAAP;AAED;;AACD,QAAG,CAACP,eAAJ,EAAqB;AACnBS,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACA,aAAO,KAAP;AACD;;AAED,QAAGX,QAAQ,KAAKE,eAAhB,EAAkC;AAChCW,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA,aAAO,KAAP;AACD;AAEF,GA5BD;;AAgCF,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,WAAW,EAAC,UAA/C;AAA0D,IAAA,SAAS,EAAC,aAApE;AAAkF,IAAA,QAAQ,EAAEI,CAAC,IAAEpB,WAAW,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,WAAW,EAAC,QAA7C;AAAsD,IAAA,SAAS,EAAC,aAAhE;AAA8E,IAAA,QAAQ,EAAEF,CAAC,IAAElB,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,UAAnD;AAA8D,IAAA,SAAS,EAAC,aAAxE;AAAsF,IAAA,QAAQ,EAAEF,CAAC,IAAEhB,WAAW,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,WAA5B;AAAwC,IAAA,WAAW,EAAC,iBAApD;AAAsE,IAAA,SAAS,EAAC,aAAhF;AAA8F,IAAA,QAAQ,EAAEF,CAAC,IAAEd,kBAAkB,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAYE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,eAA1B;AAA0C,IAAA,KAAK,EAAC,YAAhD;AAA6D,IAAA,OAAO,EAAEF,CAAC,IACrED,eAAe,KAAMF,OAAO,CAAC;AAACM,MAAAA,SAAS,EAAC;AAACC,QAAAA,IAAI,EAAEzB,QAAP;AAAiBE,QAAAA,KAAK,EAAEA,KAAxB;AAA+BE,QAAAA,QAAQ,EAACA;AAAxC;AAAX,KAAD,CAAb,GAAgF,KADjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADA,CADJ;AA+BC","sourcesContent":["\r\nimport { useMutation } from \"@apollo/client\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { ADD_USER } from \"../../gql-helper/queries\";\r\nimport './sign-up-form.css';\r\n\r\n\r\n\r\nexport default function SignUp (props) {\r\n\r\n  const [ username , setUsername] = useState('');\r\n  const [ email , setEmail] = useState('');\r\n  const [ password , setPassword] = useState('');\r\n  const [ retypedPassword , setRetypedPassword] = useState('');\r\n  const [ userNameReq , setUserNameReq] = useState(false);\r\n  const [ emailReq , setEmailReq] = useState(false);\r\n  const [ passwordReq , setPasswordReq] = useState(false);\r\n  const [ retypedPasswordReq , setRetypedPasswordReq] = useState(false);\r\n  const [ passwordMismatched , setPasswordMismatched] = useState(false);\r\n\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n\r\n  const  registerUser = async () =>{\r\n\r\n    if(isFormValidated()) await addUser();\r\n    else return false;\r\n\r\n  }\r\n\r\n  const isFormValidated = () =>{\r\n    \r\n    if(!username){\r\n    \r\n      setUserNameReq(true);\r\n      return false;\r\n    } \r\n    if(!email) {\r\n    \r\n      setEmailReq(true);\r\n      return false;\r\n    }\r\n    if(!password) {\r\n    \r\n      setPasswordReq(true);\r\n      return false;\r\n    \r\n    } \r\n    if(!retypedPassword) {\r\n      setRetypedPasswordReq(true);\r\n      return false;\r\n    }\r\n\r\n    if(password !== retypedPassword ) {\r\n      setPasswordMismatched(false);\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\nreturn (\r\n    <div id=\"login-box\">\r\n    <div className=\"left\">\r\n{/* \r\n      <div style={{marginBottom: \"20px\"}}>\r\n        <h1>Sign up</h1> <span style={{float:\"right\",marginTop: \"-47px\",cursor:\"pointer\"}}><i className=\"fa fa-times\"></i></span>\r\n      </div> */}\r\n      \r\n      \r\n      <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"signupInput\" onChange={e=>setUsername(e.target.value)}/>\r\n      <input type=\"email\" name=\"email\" placeholder=\"E-mail\" className=\"signupInput\" onChange={e=>setEmail(e.target.value)}/>\r\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"signupInput\" onChange={e=>setPassword(e.target.value)}/>\r\n      <input type=\"password\" name=\"password2\" placeholder=\"Retype password\" className=\"signupInput\" onChange={e=>setRetypedPassword(e.target.value)}/>\r\n      \r\n      <input type=\"submit\" name=\"signup_submit\" value=\"Sign me up\" onClick={e=>\r\n        isFormValidated() ?  addUser({variables:{name: username, email: email, password:password}}) :  false\r\n      }/> \r\n      \r\n    </div>\r\n    \r\n    {/* <div className=\"right\">\r\n      <span className=\"loginwith\">Sign in with<br />social network</span>\r\n      \r\n      <button className=\"social-signin facebook\">Log in with facebook</button>\r\n      <button className=\"social-signin twitter\">Log in with Twitter</button>\r\n      <button className=\"social-signin google\">Log in with Google+</button>\r\n    </div> */}\r\n    {/* <div className=\"or\">OR</div> */}\r\n  </div>  \r\n);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}