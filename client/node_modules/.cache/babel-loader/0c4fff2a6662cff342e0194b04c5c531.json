{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\components\\\\navbar\\\\account-option-popover\\\\account-option-popover.js\";\nimport React, { useState } from 'react';\nimport './account-option-popover.css';\nimport LoginModal from '../../../Utlies/modals/login/login-sign-up-modal';\nexport default function AccountOptionPopover() {\n  const options = [\"Settings\", \"Log in\"],\n        [showLoginModal, setShowLoginModal] = useState(false);\n\n  const optionClicked = (option, value) => {\n    if (option === 'Log in') setShowLoginModal(!showLoginModal);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, options.map((option, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"acc-option-popover\",\n    onClick: e => optionClicked(option),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 43\n    }\n  }, \" \", option, \" \")), showLoginModal ? /*#__PURE__*/React.createElement(LoginModal, {\n    closeModal: showModal,\n    context: \"logIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 31\n    }\n  }) : null);\n}","map":{"version":3,"sources":["E:/graphQl/client/src/components/navbar/account-option-popover/account-option-popover.js"],"names":["React","useState","LoginModal","AccountOptionPopover","options","showLoginModal","setShowLoginModal","optionClicked","option","value","map","index","e","showModal"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,8BAAP;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AAEA,eAAe,SAASC,oBAAT,GAA+B;AAE1C,QAAMC,OAAO,GAAC,CAAC,UAAD,EAAY,QAAZ,CAAd;AAAA,QACA,CAACC,cAAD,EAAkBC,iBAAlB,IAAsCL,QAAQ,CAAC,KAAD,CAD9C;;AAGA,QAAMM,aAAa,GAAG,CAACC,MAAD,EAAQC,KAAR,KAAgB;AAEnC,QAAGD,MAAM,KAAI,QAAb,EAAuBF,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACzB,GAHD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKD,OAAO,CAACM,GAAR,CAAY,CAACF,MAAD,EAAQG,KAAR,kBAAiB;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAkB,IAAA,SAAS,EAAC,oBAA5B;AAAiD,IAAA,OAAO,EAAEC,CAAC,IAAEL,aAAa,CAACC,MAAD,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAsFA,MAAtF,MAA7B,CAFL,EAIKH,cAAc,gBAAG,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEQ,SAAxB;AAAmC,IAAA,OAAO,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA0D,IAJ7E,CADJ;AAQH","sourcesContent":["import React, {useState} from 'react';\r\nimport './account-option-popover.css';\r\nimport LoginModal from '../../../Utlies/modals/login/login-sign-up-modal';\r\n\r\nexport default function AccountOptionPopover(){\r\n\r\n    const options=[\"Settings\",\"Log in\"],\r\n    [showLoginModal , setShowLoginModal]= useState(false);\r\n\r\n    const optionClicked = (option,value)=>{\r\n\r\n       if(option ==='Log in') setShowLoginModal(!showLoginModal);\r\n    }\r\n    return(\r\n        <div>\r\n\r\n            {options.map((option,index)=> <div key={index } className=\"acc-option-popover\" onClick={e=>optionClicked(option)}> {option} </div>)}\r\n\r\n            {showLoginModal ? <LoginModal closeModal={showModal} context='logIn' />: null}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}