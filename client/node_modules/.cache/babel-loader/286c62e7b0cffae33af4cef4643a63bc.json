{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\popover\\\\popover.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\n\nconst CustomPopover = props => {\n  const {\n    targetId,\n    showPopover,\n    title,\n    body\n  } = props;\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  useEffect(() => {\n    if (showPopover) toggle();\n  }, [showPopover]); //hide Popover On Outside Click   \n\n  document.body.onclick = function (e) {\n    const clickedEl = e.target,\n          popoverClassList = [\"popover-header\", \"popover-body\", \"acc-option-popover\"];\n    if (clickedEl && !popoverClassList.includes(clickedEl.className)) setPopoverOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    placement: \"bottom\",\n    id: \"popover-container\",\n    isOpen: popoverOpen,\n    target: targetId,\n    toggle: toggle,\n    style: {\n      width: \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, body)));\n};\n\nexport default CustomPopover;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/popover/popover.js"],"names":["React","useState","useEffect","Button","Popover","PopoverHeader","PopoverBody","CustomPopover","props","targetId","showPopover","title","body","popoverOpen","setPopoverOpen","toggle","document","onclick","e","clickedEl","target","popoverClassList","includes","className","width","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,aAA1B,EAAyCC,WAAzC,QAA4D,YAA5D;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA;AAAhC,MAAyCJ,KAA/C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMc,MAAM,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAAnC;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,WAAJ,EAAiBK,MAAM;AACxB,GAFQ,EAEN,CAACL,WAAD,CAFM,CAAT,CAN+B,CAY/B;;AACAM,EAAAA,QAAQ,CAACJ,IAAT,CAAcK,OAAd,GAAwB,UAASC,CAAT,EAAY;AAClC,UAAMC,SAAS,GAAGD,CAAC,CAACE,MAApB;AAAA,UACAC,gBAAgB,GAAG,CAAC,gBAAD,EAAkB,cAAlB,EAAiC,oBAAjC,CADnB;AAGA,QAAGF,SAAS,IAAI,CAACE,gBAAgB,CAACC,QAAjB,CAA0BH,SAAS,CAACI,SAApC,CAAjB,EAAiET,cAAc,CAAC,KAAD,CAAd;AACpE,GALC;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,EAAE,EAAC,mBAFL;AAGE,IAAA,MAAM,EAAED,WAHV;AAIE,IAAA,MAAM,EAAEJ,QAJV;AAKE,IAAA,MAAM,EAAEM,MALV;AAME,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDd,KAAhD,CARF,eASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,IAAd,CATF,CADF,CADF;AAeD,CAnCD;;AAqCA,eAAeL,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\r\n\r\nconst CustomPopover = (props) => {\r\n  const { targetId, showPopover, title, body } = props;\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n\r\n  useEffect(() => {\r\n    if (showPopover) toggle();\r\n  }, [showPopover]);\r\n\r\n \r\n\r\n  //hide Popover On Outside Click   \r\n  document.body.onclick = function(e) {\r\n    const clickedEl = e.target,\r\n    popoverClassList = [\"popover-header\",\"popover-body\",\"acc-option-popover\"]\r\n\r\n    if(clickedEl && !popoverClassList.includes(clickedEl.className)) setPopoverOpen(false);\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Popover\r\n        placement=\"bottom\"\r\n        id=\"popover-container\"\r\n        isOpen={popoverOpen}\r\n        target={targetId}\r\n        toggle={toggle}\r\n        style={{ width: \"150px\" }}\r\n      >\r\n        <PopoverHeader style={{ textAlign: \"center\" }}>{title}</PopoverHeader>\r\n        <PopoverBody>{body}</PopoverBody>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomPopover;\r\n"]},"metadata":{},"sourceType":"module"}