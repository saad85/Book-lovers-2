{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\components\\\\sign-up\\\\login-form.js\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport React, { useState, useEffect } from \"react\";\nimport { LOGIN_USER, GET_USER } from \"../../gql-helper/queries\";\nimport \"./login-form.css\";\nimport cookie from 'js-cookie';\nexport default function Login(props) {\n  const {\n    closeModal\n  } = props,\n        [email, setEmail] = useState(\"\"),\n        [password, setPassword] = useState(\"\"),\n        [emailReq, setEmailReq] = useState(false),\n        [passwordReq, setPasswordReq] = useState(false),\n        [emailPasswordMismatched, setEmailPasswordMismatched] = useState(false);\n  const [loginUser, {\n    data\n  }] = useMutation(LOGIN_USER);\n\n  const isFormValidated = () => {\n    if (!email) {\n      setEmailReq(true);\n      return false;\n    }\n\n    if (!password) {\n      setPasswordReq(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateAndLogin = async () => {\n    if (isFormValidated()) {\n      await loginUser({\n        variables: {\n          email: email,\n          password: password\n        }\n      });\n    }\n  };\n\n  const closeParentModal = () => closeModal ? closeModal() : false;\n\n  useEffect(() => {\n    console.log(\"data\", data);\n\n    if (data && data.loginUser) {\n      let isValidAuth = data.loginUser._id ? true : false;\n      console.log(\"data.token \", data.tokeni);\n\n      if (isValidAuth) {\n        if (data.loginUser.token) cookie.set('token', data.loginUser.token, {\n          expires: 20\n        });\n        closeParentModal();\n      } else setEmailPasswordMismatched(true);\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"login-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, emailPasswordMismatched ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mismatch-error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 34\n    }\n  }, \"*Email or Password mismatched\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"E-mail\",\n    className: \"signupInput\",\n    onChange: e => {\n      setEmailReq(false);\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), emailReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"*Email required.\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    className: \"signupInput\",\n    onChange: e => {\n      setPasswordReq(false);\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), passwordReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"*Password required.\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"signup_submit\",\n    value: \"Log in\",\n    onClick: e => validateAndLogin(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["E:/graphQl/client/src/components/sign-up/login-form.js"],"names":["useMutation","useQuery","React","useState","useEffect","LOGIN_USER","GET_USER","cookie","Login","props","closeModal","email","setEmail","password","setPassword","emailReq","setEmailReq","passwordReq","setPasswordReq","emailPasswordMismatched","setEmailPasswordMismatched","loginUser","data","isFormValidated","validateAndLogin","variables","closeParentModal","console","log","isValidAuth","_id","tokeni","token","set","expires","e","target","value"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AAAA,QACE,CAACE,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAD9B;AAAA,QAEE,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAFpC;AAAA,QAGE,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAHpC;AAAA,QAIE,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,KAAD,CAJ1C;AAAA,QAKE,CAACgB,uBAAD,EAA0BC,0BAA1B,IAAwDjB,QAAQ,CAAC,KAAD,CALlE;AAOA,QAAM,CAACkB,SAAD,EAAY;AAAEC,IAAAA;AAAF,GAAZ,IAAwBtB,WAAW,CAACK,UAAD,CAAzC;;AAEA,QAAMkB,eAAe,GAAG,MAAM;AAE5B,QAAI,CAACZ,KAAL,EAAY;AACVK,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA,aAAO,KAAP;AACD;;AACD,QAAI,CAACH,QAAL,EAAe;AACbK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,GAZD;;AAcA,QAAMM,gBAAgB,GAAG,YAAS;AAEhC,QAAGD,eAAe,EAAlB,EAAqB;AACnB,YAAMF,SAAS,CAAC;AACdI,QAAAA,SAAS,EAAE;AACTd,UAAAA,KAAK,EAAEA,KADE;AAETE,UAAAA,QAAQ,EAAEA;AAFD;AADG,OAAD,CAAf;AAOD;AACF,GAXD;;AAaA,QAAMa,gBAAgB,GAAG,MAAOhB,UAAU,GAAGA,UAAU,EAAb,GAAkB,KAA5D;;AAEAN,EAAAA,SAAS,CAAC,MAAI;AAEZuB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBN,IAAnB;;AAIA,QAAGA,IAAI,IAAIA,IAAI,CAACD,SAAhB,EAA6B;AAE3B,UAAIQ,WAAW,GAAIP,IAAI,CAACD,SAAL,CAAeS,GAAf,GAAqB,IAArB,GAA4B,KAA/C;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BN,IAAI,CAACS,MAA/B;;AACA,UAAGF,WAAH,EAAe;AAEb,YAAGP,IAAI,CAACD,SAAL,CAAeW,KAAlB,EAAwBzB,MAAM,CAAC0B,GAAP,CAAW,OAAX,EAAoBX,IAAI,CAACD,SAAL,CAAeW,KAAnC,EAA0C;AAACE,UAAAA,OAAO,EAAE;AAAV,SAA1C;AACxBR,QAAAA,gBAAgB;AACjB,OAJD,MAKKN,0BAA0B,CAAC,IAAD,CAA1B;AACN;AACF,GAjBQ,EAiBP,CAACE,IAAD,CAjBO,CAAT;AAmBA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECH,uBAAuB,gBAAG;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAH,GAAiF,IAFzG,eAGE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,SAAS,EAAC,aAJZ;AAKE,IAAA,QAAQ,EAAGgB,CAAD,IAAO;AACfnB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,QAAQ,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAaGtB,QAAQ,gBACP;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADO,GAEL,IAfN,eAgBE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,SAAS,EAAC,aAJZ;AAKE,IAAA,QAAQ,EAAGoB,CAAD,IAAO;AACfjB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,MAAAA,WAAW,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EA0BGpB,WAAW,gBACV;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADU,GAER,IA5BN,eAgCE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,eAFP;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,OAAO,EAAGkB,CAAD,IAAMX,gBAAgB,EAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CAHF,CADF;AA6CD","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { LOGIN_USER, GET_USER } from \"../../gql-helper/queries\";\r\nimport \"./login-form.css\";\r\nimport cookie from 'js-cookie';\r\n\r\nexport default function Login(props) {\r\n  const { closeModal } = props,\r\n    [email, setEmail] = useState(\"\"),\r\n    [password, setPassword] = useState(\"\"),\r\n    [emailReq, setEmailReq] = useState(false),\r\n    [passwordReq, setPasswordReq] = useState(false),\r\n    [emailPasswordMismatched, setEmailPasswordMismatched] = useState(false);\r\n\r\n  const [loginUser, { data }] = useMutation(LOGIN_USER);\r\n\r\n  const isFormValidated = () => {\r\n  \r\n    if (!email) {\r\n      setEmailReq(true);\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      setPasswordReq(true);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const validateAndLogin = async()=>{\r\n\r\n    if(isFormValidated()){\r\n      await loginUser({\r\n        variables: {\r\n          email: email,\r\n          password: password,\r\n        }\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  const closeParentModal = () => (closeModal ? closeModal() : false);\r\n\r\n  useEffect(()=>{\r\n\r\n    console.log(\"data\",data);\r\n\r\n    \r\n\r\n    if(data && data.loginUser  ) {\r\n\r\n      let isValidAuth =  data.loginUser._id ? true : false;\r\n      console.log(\"data.token \",data.tokeni);\r\n      if(isValidAuth){\r\n\r\n        if(data.loginUser.token)cookie.set('token', data.loginUser.token, {expires: 20});\r\n        closeParentModal();\r\n      } \r\n      else setEmailPasswordMismatched(true)\r\n    } \r\n  },[data])\r\n\r\n  return (\r\n    <div id=\"login-box\">\r\n\r\n\r\n      <div className=\"left\">\r\n\r\n      {emailPasswordMismatched ? <span className=\"mismatch-error-class\">*Email or Password mismatched</span> : null}\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"E-mail\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => {\r\n            setEmailReq(false);\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n        {emailReq ? (\r\n          <span className=\"error-class\">*Email required.</span>\r\n        ) : null}\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => {\r\n            setPasswordReq(false);\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        {passwordReq ? (\r\n          <span className=\"error-class\">*Password required.</span>\r\n        ) : null}\r\n\r\n        \r\n\r\n        <input\r\n          type=\"submit\"\r\n          name=\"signup_submit\"\r\n          value=\"Log in\"\r\n          onClick={(e) =>validateAndLogin()}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}