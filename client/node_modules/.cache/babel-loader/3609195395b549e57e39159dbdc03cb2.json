{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\dropdown\\\\dropdown.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./dropdown.css\";\n\nconst CustomDropdown = props => {\n  const {\n    context\n  } = props;\n  const [menus, setMenus] = useState([]);\n  const [selectedItem, setSelectedItem] = useState('Select author');\n  useEffect(() => {\n    if (props.menus) {\n      let propsMenu = props.menus ? props.menus : [];\n\n      if (context === 'authors') {\n        //update menu list in just text,value\n        let updatedAuthorsList = propsMenu.map(author => {\n          return {\n            text: author.name,\n            value: author._id\n          };\n        });\n        console.log(\"updatedAuthorsList \", updatedAuthorsList);\n        setMenus(updatedAuthorsList);\n      }\n    }\n\n    return () => {};\n  }, [props.menus]);\n\n  function showDropdown() {\n    if (document.getElementById(\"myDropdown\")) document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n  }\n\n  function filterFunction(value) {\n    var input, filter, ul, li, a, i;\n    input = document.getElementById(\"myInput\") ? document.getElementById(\"myInput\") : \"\";\n    filter = input ? input.value.toUpperCase() : \"\";\n    let div = document.getElementById(\"myDropdown\") ? document.getElementById(\"myDropdown\") : \"\";\n    a = div ? div.getElementsByTagName(\"a\") : \"\";\n\n    for (i = 0; i < a.length; i++) {\n      let txtValue = a[i].textContent || a[i].innerText;\n\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        if (a[i]) a[i].style.display = \"\";\n      } else {\n        if (a[i]) a[i].style.display = \"none\";\n      }\n    }\n  }\n\n  function setSelectedValue(selectedItem) {\n    let selectedText = selectedItem.text ? selectedItem.text : '';\n\n    if (selectedText) {\n      setSelectedItem(selectedText);\n      if (context === 'authors' && props.setParentsAuthor) props.setParentsAuthor(selectedText);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => showDropdown(),\n    className: \"dropbtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, selectedItem), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myDropdown\",\n    className: \"dropdown-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search..\",\n    id: \"myInput\",\n    onKeyUp: e => filterFunction(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), menus.map((menu, index) => /*#__PURE__*/React.createElement(\"a\", {\n    key: index,\n    href: \"#about\",\n    onClick: e => setSelectedValue(menu.text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, menu.text)))));\n};\n\nexport default CustomDropdown;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/dropdown/dropdown.js"],"names":["React","useState","useEffect","CustomDropdown","props","context","menus","setMenus","selectedItem","setSelectedItem","propsMenu","updatedAuthorsList","map","author","text","name","value","_id","console","log","showDropdown","document","getElementById","classList","toggle","filterFunction","input","filter","ul","li","a","i","toUpperCase","div","getElementsByTagName","length","txtValue","textContent","innerText","indexOf","style","display","setSelectedValue","selectedText","setParentsAuthor","e","target","menu","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./dropdown.css\";\r\n\r\nconst CustomDropdown = (props) => {\r\n\r\n  const { context } = props;\r\n  const [menus, setMenus] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState('Select author');\r\n\r\n  useEffect(() => {\r\n    if (props.menus) {\r\n\r\n      let propsMenu =props.menus ? props.menus : [];\r\n\r\n      if(context === 'authors') {\r\n\r\n        //update menu list in just text,value\r\n        let updatedAuthorsList =  propsMenu.map((author)=> {\r\n          return {\r\n            text: author.name,\r\n            value:author._id\r\n          }\r\n        });\r\n\r\n        console.log(\"updatedAuthorsList \",updatedAuthorsList);\r\n        setMenus(updatedAuthorsList);\r\n      }\r\n    }\r\n\r\n    return () => {};\r\n  }, [props.menus]);\r\n\r\n  function showDropdown() {\r\n    if (document.getElementById(\"myDropdown\"))\r\n      document.getElementById(\"myDropdown\").classList.toggle(\"show\");\r\n  }\r\n\r\n  function filterFunction(value) {\r\n    var input, filter, ul, li, a, i;\r\n    input = document.getElementById(\"myInput\")\r\n      ? document.getElementById(\"myInput\")\r\n      : \"\";\r\n    filter = input ? input.value.toUpperCase() : \"\";\r\n    let div = document.getElementById(\"myDropdown\")\r\n      ? document.getElementById(\"myDropdown\")\r\n      : \"\";\r\n    a = div ? div.getElementsByTagName(\"a\") : \"\";\r\n    for (i = 0; i < a.length; i++) {\r\n      let txtValue = a[i].textContent || a[i].innerText;\r\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n        if (a[i]) a[i].style.display = \"\";\r\n      } else {\r\n        if (a[i]) a[i].style.display = \"none\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function setSelectedValue(selectedItem){\r\n\r\n    let selectedText =selectedItem.text ? selectedItem.text : '';\r\n\r\n    if(selectedText){\r\n      \r\n      setSelectedItem(selectedText);\r\n\r\n      if(context === 'authors' && props.setParentsAuthor) props.setParentsAuthor(selectedText);\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dropdown\">\r\n        <button onClick={(e) => showDropdown()} className=\"dropbtn\">\r\n           {selectedItem}\r\n        </button>\r\n        <div id=\"myDropdown\" className=\"dropdown-content\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search..\"\r\n            id=\"myInput\"\r\n            onKeyUp={(e) => filterFunction(e.target.value)}\r\n          />\r\n\r\n          {menus.map((menu, index) => (\r\n            <a\r\n              key={index}\r\n              href=\"#about\"\r\n              onClick={(e) => setSelectedValue(menu.text)}\r\n            >\r\n              {menu.text}\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomDropdown;\r\n"]},"metadata":{},"sourceType":"module"}