{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\components\\\\sign-up\\\\login-form.js\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport React, { useState, useEffect } from \"react\";\nimport { LOGIN_USER, GET_USER } from \"../../gql-helper/queries\";\nimport \"./sign-up-form.css\";\nexport default function Login(props) {\n  const {\n    closeModal\n  } = props,\n        [email, setEmail] = useState(\"\"),\n        [password, setPassword] = useState(\"\"),\n        [emailReq, setEmailReq] = useState(false),\n        [passwordReq, setPasswordReq] = useState(false),\n        [ewmailPasswordMismatched, setEmailPasswordMismatched] = useState(false);\n  const [loginUser, {\n    data\n  }] = useMutation(LOGIN_USER);\n  console.log(\" === data === \", data);\n\n  const isFormValidated = () => {\n    if (!email) {\n      setEmailReq(true);\n      return false;\n    }\n\n    if (!password) {\n      setPasswordReq(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateAndLogin = async () => {\n    if (isFormValidated()) {\n      await loginUser({\n        variables: {\n          email: email,\n          password: password\n        },\n        refetchQueries: GET_USER,\n        onError: error => console.log(error)\n      });\n      closeParentModal();\n    }\n  };\n\n  const closeParentModal = () => closeModal ? closeModal() : false;\n\n  useEffect(() => {\n    // refetch({ email });\n    return () => {};\n  }, [email, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"login-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"E-mail\",\n    className: \"signupInput\",\n    onChange: e => {\n      setEmailReq(false);\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), emailReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"*Email required.\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    className: \"signupInput\",\n    onChange: e => {\n      setPasswordReq(false);\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), passwordReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"*Password required.\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"signup_submit\",\n    value: \"Log in\",\n    onClick: e => validateAndLogin(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["E:/graphQl/client/src/components/sign-up/login-form.js"],"names":["useMutation","useQuery","React","useState","useEffect","LOGIN_USER","GET_USER","Login","props","closeModal","email","setEmail","password","setPassword","emailReq","setEmailReq","passwordReq","setPasswordReq","ewmailPasswordMismatched","setEmailPasswordMismatched","loginUser","data","console","log","isFormValidated","validateAndLogin","variables","refetchQueries","onError","error","closeParentModal","e","target","value"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { LOGIN_USER, GET_USER } from \"../../gql-helper/queries\";\r\nimport \"./sign-up-form.css\";\r\n\r\nexport default function Login(props) {\r\n  const { closeModal } = props,\r\n    [email, setEmail] = useState(\"\"),\r\n    [password, setPassword] = useState(\"\"),\r\n    [emailReq, setEmailReq] = useState(false),\r\n    [passwordReq, setPasswordReq] = useState(false),\r\n    [ewmailPasswordMismatched, setEmailPasswordMismatched] = useState(false);\r\n\r\n  const [loginUser, { data }] = useMutation(LOGIN_USER);\r\n\r\n    console.log(\" === data === \",data);\r\n\r\n  const isFormValidated = () => {\r\n  \r\n    if (!email) {\r\n      setEmailReq(true);\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      setPasswordReq(true);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const validateAndLogin = async()=>{\r\n\r\n    if(isFormValidated()){\r\n      await loginUser({\r\n        variables: {\r\n          email: email,\r\n          password: password,\r\n        },\r\n        refetchQueries:(GET_USER),\r\n        onError:((error)=> console.log(error))\r\n      });\r\n      closeParentModal();\r\n    }\r\n  }\r\n\r\n  const closeParentModal = () => (closeModal ? closeModal() : false);\r\n\r\n  useEffect(() => {\r\n    // refetch({ email });\r\n\r\n    return () => {};\r\n  }, [email, data]);\r\n\r\n  return (\r\n    <div id=\"login-box\">\r\n      <div className=\"left\">\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"E-mail\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => {\r\n            setEmailReq(false);\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n        {emailReq ? (\r\n          <span className=\"error-class\">*Email required.</span>\r\n        ) : null}\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => {\r\n            setPasswordReq(false);\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        {passwordReq ? (\r\n          <span className=\"error-class\">*Password required.</span>\r\n        ) : null}\r\n\r\n        <input\r\n          type=\"submit\"\r\n          name=\"signup_submit\"\r\n          value=\"Log in\"\r\n          onClick={(e) =>validateAndLogin()}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}