{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\modals\\\\add-review-modals.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from \"reactstrap\";\nimport \"./add-review-modal.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport CustomDropdown from \"../dropdown/dropdown\";\nimport CustomGenreDropdown from \"../dropdown/dropdown\";\nimport { ADD_REVIEW, ADD_AUTHOR, AUTHORS, GET_REVIEW } from \"../../gql-helper/queries\";\n\nconst AddReviewModal = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [desc, setDesc] = useState('');\n  const [showAddNewAurthor, setShowAddNewAurthor] = useState(false);\n  const [readOnly] = useState(false);\n  const [authorsList, setAuthorsList] = useState([]);\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\n  const [hasAllMandatoryFields, setHasAllMandatoryFields] = useState(true);\n  const [titleReq, setTitleReq] = useState(true);\n  const [authorReq, setAuthorReq] = useState(true);\n  const [imgId, setImgId] = useState('');\n  const [addReview] = useMutation(ADD_REVIEW);\n  const [addAuthor] = useMutation(ADD_AUTHOR);\n  const {\n    data\n  } = useQuery(AUTHORS);\n  const genreList = [\"Action and adventure\", \"Bio-graphy\", \"Children's\", \"Graphic novel\", \"Poetry\", \"Political thriller\", \"Science fiction\"];\n\n  const toggle = () => setModal(!modal);\n\n  function setAuthorFromDropdown(text, value) {\n    setSelectedAuthor(value);\n  }\n\n  function setGenreFromDropdown(text, value) {\n    setGenre(value);\n  }\n\n  function uploadImage() {\n    let file = document.getElementById(\"img-uploader-btn\").files;\n\n    if (file.length > 0) {\n      let uploadedFile = file[0];\n      let reader = new FileReader();\n\n      reader.onload = function (fileLoadEvent) {\n        let srcData = fileLoadEvent.target.result;\n        if (srcData) uploadImgFileToApi(srcData);\n      };\n\n      reader.readAsDataURL(uploadedFile);\n    }\n  }\n\n  async function uploadImgFileToApi(srcData) {\n    await fetch(\"https://api.jsonbin.io/b\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n        'secret-key': '$2b$10$rhIFVqhUIEQwsbi0CwHLMe6jxkKyBD3otM2McKelyCAyWXJyFWQ7G'\n      },\n      body: JSON.stringify({\n        imgSrc: srcData\n      })\n    }).then(async response => {\n      const {\n        id\n      } = await response.json();\n      setImgId(id);\n    });\n  }\n\n  function closeModal() {\n    setModal(!modal);\n\n    if (props.closeModal) {\n      setTimeout(() => {\n        props.closeModal(false);\n      }, 100);\n    }\n  } // var myDropzone = new Dropzone(\"div#myId\", { url: \"/file/post\"});\n\n\n  useEffect(() => {\n    // if (props.updateReview) props.updateReview();\n    if (data && data.authors && data.authors.length > 0) {\n      setAuthorsList(data.authors);\n    } //form validation\n\n\n    if (title && title.length > 0 && selectedAuthor && selectedAuthor.length > 0) {\n      setHasAllMandatoryFields(false);\n    }\n\n    if (title) setTitleReq(false);else setTitleReq(true);\n    if (selectedAuthor) setAuthorReq(false);else setAuthorReq(true);\n    return () => {};\n  }, [data, title, selectedAuthor]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    onClosed: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    style: {\n      backgroundColor: \"#f7f7f7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Add review\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Title:\", \" \", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"add a title\",\n    onChange: e => {\n      setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }), titleReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"req-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 27\n    }\n  }, \"*Required field\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Author:\", !showAddNewAurthor ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomDropdown, {\n    dropdownId: \"author\",\n    menus: authorsList,\n    setParentsAuthor: setAuthorFromDropdown,\n    context: \"add_review_authors\",\n    placeholder: \"Select author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }), \" \", \"or\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"add-new-aurthor\",\n    onClick: e => setShowAddNewAurthor(!showAddNewAurthor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    style: {\n      fontSize: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 23\n    }\n  }), \" Add new\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"col-xs-7 col-sm-7 col-md-7 col-lg-7  \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"add new author\",\n    readOnly: readOnly,\n    onChange: e => {\n      setAuthor(e.target.value);\n    },\n    style: {\n      marginTop: \"10px\"\n    },\n    value: author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\",\n    id: \"addIcon\",\n    onClick: e => {\n      addAuthor({\n        variables: {\n          authorName: author\n        },\n        refetchQueries: [{\n          query: AUTHORS\n        }]\n      });\n      setShowAddNewAurthor(!showAddNewAurthor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\",\n    id: \"backIcon\",\n    onClick: e => setShowAddNewAurthor(!showAddNewAurthor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }), authorReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"req-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 28\n    }\n  }, \"*Required field\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-6 col-sm-6  col-md-6  col-lg-6 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, \"Genre:\", \" \", /*#__PURE__*/React.createElement(CustomGenreDropdown, {\n    dropdownId: \"genre\",\n    menus: genreList,\n    setParentsGenre: setGenreFromDropdown,\n    context: \"add_review_genre\",\n    placeholder: \"Select genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-6 col-sm-6  col-md-6  col-lg-6 img-section \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"Upload a cover:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"img-uploader-btn\",\n    onChange: e => uploadImage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"How was it:\", \" \", /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Short summary\",\n    style: {\n      width: \"100%\"\n    },\n    onChange: e => {\n      setDesc(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    disabled: hasAllMandatoryFields,\n    onClick: e => {\n      closeModal();\n      addReview({\n        variables: {\n          title: title,\n          author: selectedAuthor,\n          genre: genre,\n          desc: desc,\n          imgId: imgId\n        },\n        refetchQueries: [GET_REVIEW],\n        onCompleted: data => {\n          console.log(\"mutation done\", data);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }), \" Add\"))));\n};\n\nexport default AddReviewModal;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/modals/add-review-modals.js"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","useMutation","useQuery","CustomDropdown","CustomGenreDropdown","ADD_REVIEW","ADD_AUTHOR","AUTHORS","GET_REVIEW","AddReviewModal","props","className","modal","setModal","title","setTitle","author","setAuthor","genre","setGenre","desc","setDesc","showAddNewAurthor","setShowAddNewAurthor","readOnly","authorsList","setAuthorsList","selectedAuthor","setSelectedAuthor","hasAllMandatoryFields","setHasAllMandatoryFields","titleReq","setTitleReq","authorReq","setAuthorReq","imgId","setImgId","addReview","addAuthor","data","genreList","toggle","setAuthorFromDropdown","text","value","setGenreFromDropdown","uploadImage","file","document","getElementById","files","length","uploadedFile","reader","FileReader","onload","fileLoadEvent","srcData","target","result","uploadImgFileToApi","readAsDataURL","fetch","method","headers","body","JSON","stringify","imgSrc","then","response","id","json","closeModal","setTimeout","authors","backgroundColor","e","fontSize","marginTop","variables","authorName","refetchQueries","query","width","onCompleted","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport \"./add-review-modal.css\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport CustomDropdown from \"../dropdown/dropdown\";\r\nimport CustomGenreDropdown from \"../dropdown/dropdown\";\r\n\r\nimport {\r\n  ADD_REVIEW,\r\n  ADD_AUTHOR,\r\n  AUTHORS,\r\n  GET_REVIEW,\r\n} from \"../../gql-helper/queries\";\r\n\r\nconst AddReviewModal = (props) => {\r\n  const { className } = props;\r\n\r\n  const [modal, setModal] = useState(true);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [desc, setDesc] = useState('');\r\n  const [showAddNewAurthor, setShowAddNewAurthor] = useState(false);\r\n  const [readOnly] = useState(false);\r\n  const [authorsList, setAuthorsList] = useState([]);\r\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\r\n  const [hasAllMandatoryFields, setHasAllMandatoryFields] = useState(true);\r\n  const [titleReq, setTitleReq] = useState(true);\r\n  const [authorReq, setAuthorReq] = useState(true);\r\n  const [imgId, setImgId] = useState('');\r\n\r\n  const [addReview] = useMutation(ADD_REVIEW);\r\n  const [addAuthor] = useMutation(ADD_AUTHOR);\r\n  const { data } = useQuery(AUTHORS);\r\n\r\n  const genreList = [\r\n    \"Action and adventure\",\r\n    \"Bio-graphy\",\r\n    \"Children's\",\r\n    \"Graphic novel\",\r\n    \"Poetry\",\r\n    \"Political thriller\",\r\n    \"Science fiction\"\r\n  ];\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  function setAuthorFromDropdown(text, value) {\r\n    setSelectedAuthor(value);\r\n\r\n  }\r\n\r\n  function setGenreFromDropdown(text, value){\r\n    setGenre(value);\r\n    \r\n  }\r\n\r\n  function uploadImage(){\r\n    let file = document.getElementById(\"img-uploader-btn\").files;\r\n\r\n    if(file.length>0){\r\n      let uploadedFile = file[0];\r\n\r\n      let reader = new FileReader();\r\n\r\n      reader.onload = function(fileLoadEvent){\r\n\r\n        let srcData = fileLoadEvent.target.result;\r\n\r\n        if(srcData) uploadImgFileToApi(srcData);\r\n      }\r\n\r\n      reader.readAsDataURL(uploadedFile);\r\n    }\r\n  }\r\n\r\n  async function uploadImgFileToApi(srcData){\r\n    \r\n  await fetch(\"https://api.jsonbin.io/b\",{\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        'secret-key':'$2b$10$rhIFVqhUIEQwsbi0CwHLMe6jxkKyBD3otM2McKelyCAyWXJyFWQ7G'\r\n      },\r\n      body: JSON.stringify({imgSrc:srcData})\r\n    }).then(async(response)=>{\r\n      \r\n      const {id} = await response.json();\r\n       setImgId(id)\r\n    })\r\n  }\r\n  \r\n\r\n  function closeModal() {\r\n    setModal(!modal);\r\n\r\n    if (props.closeModal) {\r\n      setTimeout(() => {\r\n        props.closeModal(false);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  // var myDropzone = new Dropzone(\"div#myId\", { url: \"/file/post\"});\r\n\r\n  useEffect(() => {\r\n    // if (props.updateReview) props.updateReview();\r\n\r\n    if (data && data.authors && data.authors.length > 0) {\r\n      setAuthorsList(data.authors);\r\n    }\r\n\r\n    //form validation\r\n    if (title && title.length > 0 && selectedAuthor && selectedAuthor.length > 0) {\r\n      setHasAllMandatoryFields(false);\r\n    }\r\n\r\n\r\n    if(title) setTitleReq(false);\r\n    else setTitleReq(true);\r\n\r\n    if(selectedAuthor) setAuthorReq(false);\r\n    else setAuthorReq(true);\r\n\r\n    return () => {};\r\n  }, [data, title, selectedAuthor]);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        className={className}\r\n        onClosed={() => closeModal()}\r\n      >\r\n        <ModalHeader toggle={toggle} style={{ backgroundColor: \"#f7f7f7\" }}>\r\n          Add review\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n            <div className=\"form-field\">\r\n              Title:{\" \"}\r\n              <Input\r\n                placeholder=\"add a title\"\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n              />\r\n\r\n              {titleReq ? <span className=\"req-class\">*Required field</span> : null}\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              Author:\r\n              {!showAddNewAurthor ? (\r\n                <div>\r\n                  <>\r\n                    <CustomDropdown\r\n                      dropdownId=\"author\"\r\n                      menus={authorsList}\r\n                      setParentsAuthor={setAuthorFromDropdown}\r\n                      context=\"add_review_authors\"\r\n                      placeholder=\"Select author\"\r\n                    />{\" \"}\r\n                    or{\" \"}\r\n                    <span\r\n                      className=\"add-new-aurthor\" \r\n                      onClick={(e) => setShowAddNewAurthor(!showAddNewAurthor)}\r\n                    >\r\n                      <i className=\"fas fa-plus\" style={{fontSize: \"12px\"}}></i> Add new\r\n                    </span>\r\n                  </>\r\n                </div>\r\n              ) : (\r\n                <span className=\"row\">\r\n                  <span className=\"col-xs-7 col-sm-7 col-md-7 col-lg-7  \">\r\n                    <Input\r\n                      placeholder=\"add new author\"\r\n                      readOnly={readOnly}\r\n                      onChange={(e) => {\r\n                        setAuthor(e.target.value);\r\n                      }}\r\n                      style={{ marginTop: \"10px\" }}\r\n                      value={author}\r\n                    />\r\n                  </span>\r\n                  <span\r\n                    className=\" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\"\r\n                    id=\"addIcon\"\r\n                    onClick={(e) => {\r\n                      addAuthor({\r\n                        variables: { authorName: author },\r\n                        refetchQueries: [{ query: AUTHORS }],\r\n                      });setShowAddNewAurthor(!showAddNewAurthor);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-plus\"></i>\r\n                  </span>\r\n                  <span\r\n                    className=\" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\"\r\n                    id=\"backIcon\"\r\n                    onClick={(e) => setShowAddNewAurthor(!showAddNewAurthor)}\r\n                  >\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                  </span>\r\n                </span>\r\n              )}\r\n              <div></div>\r\n\r\n              {authorReq ? <span className=\"req-class\">*Required field</span> : null}\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              \r\n              <div className=\"row\">\r\n                <div className=\"col-xs-6 col-sm-6  col-md-6  col-lg-6 \">\r\n                Genre:{\" \"}\r\n                  <CustomGenreDropdown\r\n                    dropdownId=\"genre\"\r\n                    menus={genreList}\r\n                    setParentsGenre={setGenreFromDropdown}\r\n                    context=\"add_review_genre\"\r\n                    placeholder=\"Select genre\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-xs-6 col-sm-6  col-md-6  col-lg-6 img-section \">\r\n                \r\n                  Upload a cover:\r\n                    <input type=\"file\"  id=\"img-uploader-btn\" onChange={e=>uploadImage()}/>\r\n              \r\n                </div>\r\n              </div>\r\n        \r\n              \r\n            </div>\r\n\r\n            {/* <img src={imgSrc} width=\"30px\"/> */}\r\n\r\n            \r\n\r\n            <div className=\"form-field\">\r\n              How was it:{\" \"}\r\n              <textarea\r\n                placeholder=\"Short summary\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={(e) => {\r\n                  setDesc(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            \r\n          </div>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"secondary\"\r\n            disabled={hasAllMandatoryFields}\r\n            onClick={(e) => {\r\n              closeModal();\r\n              addReview({\r\n                variables: {\r\n                  title: title,\r\n                  author: selectedAuthor,\r\n                  genre: genre,\r\n                  desc: desc,\r\n                  imgId: imgId\r\n                },\r\n                refetchQueries: [ GET_REVIEW ],\r\n                onCompleted:(data)=>{console.log(\"mutation done\",data)}\r\n              });\r\n            }}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Add\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReviewModal;\r\n"]},"metadata":{},"sourceType":"module"}