{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\add-review-modals.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Tooltip } from \"reactstrap\";\nimport \"./add-review-modal.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport CustomDropdown from \"./dropdown/dropdown\";\nimport CustomGenreDropdown from \"./dropdown/dropdown\";\nimport { ADD_REVIEW, ADD_AUTHOR, AUTHORS, GET_REVIEW } from \"../gql-helper/queries\";\n\nconst AddReviewModal = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [desc, setDesc] = useState('');\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showAddNewAurthor, setShowAddNewAurthor] = useState(false);\n  const [readOnly, setReadOnly] = useState(false);\n  const [authorsList, setAuthorsList] = useState([]);\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\n  const [hasAllMandatoryFields, setHasAllMandatoryFields] = useState(true);\n  const [titleReq, setTitleReq] = useState(true);\n  const [authorReq, setAuthorReq] = useState(true);\n  const [imgId, setImgId] = useState('');\n  const [addTooltipOpen, setAddTooltipOpen] = useState(false);\n  const [backTooltipOpen, setBackTooltipOpen] = useState(false);\n\n  const addToggleTooltip = () => setAddTooltipOpen(!addTooltipOpen);\n\n  const backToggleTooltip = () => setBackTooltipOpen(!backTooltipOpen);\n\n  const [addReview, {\n    reviewData\n  }] = useMutation(ADD_REVIEW);\n  const [addAuthor, {\n    authordata\n  }] = useMutation(ADD_AUTHOR);\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(AUTHORS);\n  const genreList = [\"Action and adventure\", \"Bio-graphy\", \"Children's\", \"Graphic novel\", \"Poetry\", \"Political thriller\", \"Science fiction\"];\n\n  const toggle = () => setModal(!modal);\n\n  function setAuthorFromDropdown(text, value) {\n    setSelectedAuthor(value);\n  }\n\n  function setGenreFromDropdown(text, value) {\n    setGenre(value);\n  }\n\n  function uploadImage() {\n    let file = document.getElementById(\"img-uploader-btn\").files;\n\n    if (file.length > 0) {\n      let uploadedFile = file[0];\n      let reader = new FileReader();\n\n      reader.onload = function (fileLoadEvent) {\n        let srcData = fileLoadEvent.target.result;\n        if (srcData) uploadImgFileToApi(srcData);\n      };\n\n      reader.readAsDataURL(uploadedFile);\n    }\n  }\n\n  async function uploadImgFileToApi(srcData) {\n    await fetch(\"https://api.jsonbin.io/b\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n        'secret-key': '$2b$10$rhIFVqhUIEQwsbi0CwHLMe6jxkKyBD3otM2McKelyCAyWXJyFWQ7G'\n      },\n      body: JSON.stringify({\n        imgSrc: srcData\n      })\n    }).then(async response => {\n      const {\n        id\n      } = await response.json();\n      setImgId(id);\n    });\n  }\n\n  function closeModal() {\n    setModal(!modal);\n\n    if (props.closeModal) {\n      setTimeout(() => {\n        props.closeModal(false);\n      }, 100);\n    }\n  } // var myDropzone = new Dropzone(\"div#myId\", { url: \"/file/post\"});\n\n\n  useEffect(() => {\n    if (props.updateReview) props.updateReview();\n\n    if (data && data.authors && data.authors.length > 0) {\n      setAuthorsList(data.authors);\n    } //form validation\n\n\n    if (title.length > 0 && selectedAuthor.length > 0) {\n      setHasAllMandatoryFields(false);\n    }\n\n    if (title) setTitleReq(false);\n    if (selectedAuthor) setAuthorReq(false);\n    return () => {};\n  }, [data, title, selectedAuthor]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    onClosed: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    style: {\n      backgroundColor: \"#f7f7f7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"Add review\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Title:\", \" \", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"add a title\",\n    onChange: e => {\n      setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }), titleReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"req-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 27\n    }\n  }, \"*Required field\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Author:\", !showAddNewAurthor ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomDropdown, {\n    dropdownId: \"author\",\n    menus: authorsList,\n    setParentsAuthor: setAuthorFromDropdown,\n    context: \"authors\",\n    placeholder: \"Select author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }), \" \", \"or\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"add-new-aurthor\",\n    onClick: e => setShowAddNewAurthor(!showAddNewAurthor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    style: {\n      fontSize: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 23\n    }\n  }), \" Add new\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"col-xs-7 col-sm-7 col-md-7 col-lg-7  \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"add new author\",\n    readOnly: readOnly,\n    onChange: e => {\n      setAuthor(e.target.value);\n    },\n    style: {\n      marginTop: \"10px\"\n    },\n    value: author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\",\n    id: \"addIcon\",\n    onClick: e => {\n      addAuthor({\n        variables: {\n          authorName: author\n        },\n        refetchQueries: [{\n          query: AUTHORS\n        }]\n      });\n      setShowAddNewAurthor(!showAddNewAurthor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\",\n    id: \"backIcon\",\n    onClick: e => setShowAddNewAurthor(!showAddNewAurthor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }), authorReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"req-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 28\n    }\n  }, \"*Required field\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-6 col-sm-6  col-md-6  col-lg-6 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"Genre:\", \" \", /*#__PURE__*/React.createElement(CustomGenreDropdown, {\n    dropdownId: \"genre\",\n    menus: genreList,\n    setParentsGenre: setGenreFromDropdown,\n    context: \"genre\",\n    placeholder: \"Select genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-6 col-sm-6  col-md-6  col-lg-6img-section \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, \"Upload a cover:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"img-uploader-btn\",\n    onChange: e => uploadImage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, \"How was it:\", \" \", /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Short summary\",\n    style: {\n      width: \"100%\"\n    },\n    onChange: e => {\n      setDesc(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    disabled: hasAllMandatoryFields,\n    onClick: e => {\n      closeModal();\n      addReview({\n        variables: {\n          title: title,\n          author: selectedAuthor,\n          genre: genre,\n          desc: desc,\n          imgId: imgId\n        },\n        refetchQueries: [{\n          query: GET_REVIEW\n        }],\n        onCompleted: data => {\n          console.log(\"mutation done\", data);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }), \" Add\"))));\n};\n\nexport default AddReviewModal;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/add-review-modals.js"],"names":["React","useState","useEffect","useCallback","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Tooltip","useMutation","useQuery","CustomDropdown","CustomGenreDropdown","ADD_REVIEW","ADD_AUTHOR","AUTHORS","GET_REVIEW","AddReviewModal","props","className","modal","setModal","title","setTitle","author","setAuthor","genre","setGenre","desc","setDesc","showDropdown","setShowDropdown","showAddNewAurthor","setShowAddNewAurthor","readOnly","setReadOnly","authorsList","setAuthorsList","selectedAuthor","setSelectedAuthor","hasAllMandatoryFields","setHasAllMandatoryFields","titleReq","setTitleReq","authorReq","setAuthorReq","imgId","setImgId","addTooltipOpen","setAddTooltipOpen","backTooltipOpen","setBackTooltipOpen","addToggleTooltip","backToggleTooltip","addReview","reviewData","addAuthor","authordata","error","loading","data","genreList","toggle","setAuthorFromDropdown","text","value","setGenreFromDropdown","uploadImage","file","document","getElementById","files","length","uploadedFile","reader","FileReader","onload","fileLoadEvent","srcData","target","result","uploadImgFileToApi","readAsDataURL","fetch","method","headers","body","JSON","stringify","imgSrc","then","response","id","json","closeModal","setTimeout","updateReview","authors","backgroundColor","e","fontSize","marginTop","variables","authorName","refetchQueries","query","width","onCompleted","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport \"./add-review-modal.css\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport CustomDropdown from \"./dropdown/dropdown\";\r\nimport CustomGenreDropdown from \"./dropdown/dropdown\";\r\n\r\nimport {\r\n  ADD_REVIEW,\r\n  ADD_AUTHOR,\r\n  AUTHORS,\r\n  GET_REVIEW,\r\n} from \"../gql-helper/queries\";\r\n\r\nconst AddReviewModal = (props) => {\r\n  const { className } = props;\r\n\r\n  const [modal, setModal] = useState(true);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [desc, setDesc] = useState('');\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [showAddNewAurthor, setShowAddNewAurthor] = useState(false);\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [authorsList, setAuthorsList] = useState([]);\r\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\r\n  const [hasAllMandatoryFields, setHasAllMandatoryFields] = useState(true);\r\n  const [titleReq, setTitleReq] = useState(true);\r\n  const [authorReq, setAuthorReq] = useState(true);\r\n  const [imgId, setImgId] = useState('');\r\n\r\n  const [addTooltipOpen, setAddTooltipOpen] = useState(false);\r\n  const [backTooltipOpen, setBackTooltipOpen] = useState(false);\r\n\r\n  const addToggleTooltip = () => setAddTooltipOpen(!addTooltipOpen);\r\n  const backToggleTooltip = () => setBackTooltipOpen(!backTooltipOpen);\r\n\r\n  const [addReview, { reviewData }] = useMutation(ADD_REVIEW);\r\n  const [addAuthor, { authordata }] = useMutation(ADD_AUTHOR);\r\n  const { error, loading, data } = useQuery(AUTHORS);\r\n\r\n  const genreList = [\r\n    \"Action and adventure\",\r\n    \"Bio-graphy\",\r\n    \"Children's\",\r\n    \"Graphic novel\",\r\n    \"Poetry\",\r\n    \"Political thriller\",\r\n    \"Science fiction\"\r\n  ];\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  function setAuthorFromDropdown(text, value) {\r\n    setSelectedAuthor(value);\r\n\r\n  }\r\n\r\n  function setGenreFromDropdown(text, value){\r\n    setGenre(value);\r\n    \r\n  }\r\n\r\n  function uploadImage(){\r\n    let file = document.getElementById(\"img-uploader-btn\").files;\r\n\r\n    if(file.length>0){\r\n      let uploadedFile = file[0];\r\n\r\n      let reader = new FileReader();\r\n\r\n      reader.onload = function(fileLoadEvent){\r\n\r\n        let srcData = fileLoadEvent.target.result;\r\n\r\n        if(srcData) uploadImgFileToApi(srcData);\r\n      }\r\n\r\n      reader.readAsDataURL(uploadedFile);\r\n    }\r\n  }\r\n\r\n  async function uploadImgFileToApi(srcData){\r\n    \r\n  await fetch(\"https://api.jsonbin.io/b\",{\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        'secret-key':'$2b$10$rhIFVqhUIEQwsbi0CwHLMe6jxkKyBD3otM2McKelyCAyWXJyFWQ7G'\r\n      },\r\n      body: JSON.stringify({imgSrc:srcData})\r\n    }).then(async(response)=>{\r\n      \r\n      const {id} = await response.json();\r\n       setImgId(id)\r\n    })\r\n  }\r\n  \r\n\r\n  function closeModal() {\r\n    setModal(!modal);\r\n\r\n    if (props.closeModal) {\r\n      setTimeout(() => {\r\n        props.closeModal(false);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  // var myDropzone = new Dropzone(\"div#myId\", { url: \"/file/post\"});\r\n\r\n  useEffect(() => {\r\n    if (props.updateReview) props.updateReview();\r\n\r\n    if (data && data.authors && data.authors.length > 0) {\r\n      setAuthorsList(data.authors);\r\n    }\r\n\r\n    //form validation\r\n    if (title.length > 0 && selectedAuthor.length > 0) {\r\n      setHasAllMandatoryFields(false);\r\n    }\r\n\r\n    if(title) setTitleReq(false);\r\n    if(selectedAuthor) setAuthorReq(false);\r\n\r\n    return () => {};\r\n  }, [data, title, selectedAuthor]);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        className={className}\r\n        onClosed={() => closeModal()}\r\n      >\r\n        <ModalHeader toggle={toggle} style={{ backgroundColor: \"#f7f7f7\" }}>\r\n          Add review\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n            <div className=\"form-field\">\r\n              Title:{\" \"}\r\n              <Input\r\n                placeholder=\"add a title\"\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n              />\r\n\r\n              {titleReq ? <span className=\"req-class\">*Required field</span> : null}\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              Author:\r\n              {!showAddNewAurthor ? (\r\n                <div>\r\n                  <>\r\n                    <CustomDropdown\r\n                      dropdownId=\"author\"\r\n                      menus={authorsList}\r\n                      setParentsAuthor={setAuthorFromDropdown}\r\n                      context=\"authors\"\r\n                      placeholder=\"Select author\"\r\n                    />{\" \"}\r\n                    or{\" \"}\r\n                    <span\r\n                      className=\"add-new-aurthor\" \r\n                      onClick={(e) => setShowAddNewAurthor(!showAddNewAurthor)}\r\n                    >\r\n                      <i className=\"fas fa-plus\" style={{fontSize: \"12px\"}}></i> Add new\r\n                    </span>\r\n                  </>\r\n                </div>\r\n              ) : (\r\n                <span className=\"row\">\r\n                  <span className=\"col-xs-7 col-sm-7 col-md-7 col-lg-7  \">\r\n                    <Input\r\n                      placeholder=\"add new author\"\r\n                      readOnly={readOnly}\r\n                      onChange={(e) => {\r\n                        setAuthor(e.target.value);\r\n                      }}\r\n                      style={{ marginTop: \"10px\" }}\r\n                      value={author}\r\n                    />\r\n                  </span>\r\n                  <span\r\n                    className=\" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\"\r\n                    id=\"addIcon\"\r\n                    onClick={(e) => {\r\n                      addAuthor({\r\n                        variables: { authorName: author },\r\n                        refetchQueries: [{ query: AUTHORS }],\r\n                      });setShowAddNewAurthor(!showAddNewAurthor);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-plus\"></i>\r\n                  </span>\r\n                  <span\r\n                    className=\" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\"\r\n                    id=\"backIcon\"\r\n                    onClick={(e) => setShowAddNewAurthor(!showAddNewAurthor)}\r\n                  >\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                  </span>\r\n\r\n                  {/* <Tooltip placement=\"bottom\" isOpen={addTooltipOpen} target=\"addIcon\" toggle={addToggleTooltip}>\r\n                            Add \r\n                          </Tooltip>\r\n                          <Tooltip placement=\"bottom\" isOpen={backTooltipOpen} target=\"backIcon\" toggle={backToggleTooltip}>\r\n                            Back\r\n                          </Tooltip> */}\r\n                </span>\r\n              )}\r\n              <div></div>\r\n\r\n              {authorReq ? <span className=\"req-class\">*Required field</span> : null}\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              \r\n              <div className=\"row\">\r\n                <div className=\"col-xs-6 col-sm-6  col-md-6  col-lg-6 \">\r\n                Genre:{\" \"}\r\n                  <CustomGenreDropdown\r\n                    dropdownId=\"genre\"\r\n                    menus={genreList}\r\n                    setParentsGenre={setGenreFromDropdown}\r\n                    context=\"genre\"\r\n                    placeholder=\"Select genre\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-xs-6 col-sm-6  col-md-6  col-lg-6img-section \">\r\n                \r\n                  Upload a cover:\r\n                    <input type=\"file\"  id=\"img-uploader-btn\" onChange={e=>uploadImage()}/>\r\n              \r\n                </div>\r\n              </div>\r\n        \r\n              \r\n            </div>\r\n\r\n            {/* <img src={imgSrc} width=\"30px\"/> */}\r\n\r\n            \r\n\r\n            <div className=\"form-field\">\r\n              How was it:{\" \"}\r\n              <textarea\r\n                placeholder=\"Short summary\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={(e) => {\r\n                  setDesc(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            \r\n          </div>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"secondary\"\r\n            disabled={hasAllMandatoryFields}\r\n            onClick={(e) => {\r\n              closeModal();\r\n              addReview({\r\n                variables: {\r\n                  title: title,\r\n                  author: selectedAuthor,\r\n                  genre: genre,\r\n                  desc: desc,\r\n                  imgId: imgId\r\n                },\r\n                refetchQueries: [{ query: GET_REVIEW }],\r\n                onCompleted:(data)=>{console.log(\"mutation done\",data)}\r\n              });\r\n            }}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Add\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReviewModal;\r\n"]},"metadata":{},"sourceType":"module"}