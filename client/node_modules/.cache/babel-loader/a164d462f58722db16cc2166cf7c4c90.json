{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-in-form.js\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { ADD_USER, GET_USER } from \"../../gql-helper/queries\";\nimport \"./sign-up-form.css\";\nexport default function SignUp(props) {\n  const {\n    closeModal\n  } = props,\n        [username, setUsername] = useState(\"\"),\n        [email, setEmail] = useState(\"\"),\n        [password, setPassword] = useState(\"\"),\n        [retypedPassword, setRetypedPassword] = useState(\"\"),\n        [userNameReq, setUserNameReq] = useState(false),\n        [emailReq, setEmailReq] = useState(false),\n        [passwordReq, setPasswordReq] = useState(false),\n        [retypedPasswordReq, setRetypedPasswordReq] = useState(false),\n        [userAlreadyExists, setUserAlreadyExists] = useState(false),\n        [passwordMismatched, setPasswordMismatched] = useState(false);\n  const [addUser] = useMutation(ADD_USER),\n        {\n    loading,\n    data,\n    refetch\n  } = useQuery(GET_USER, {\n    variables: {\n      email: email\n    }\n  });\n\n  const isFormValidated = () => {\n    if (!username) {\n      setUserNameReq(true);\n      return false;\n    }\n\n    if (!email) {\n      setEmailReq(true);\n      return false;\n    }\n\n    if (!password) {\n      setPasswordReq(true);\n      return false;\n    }\n\n    if (!retypedPassword) {\n      setRetypedPasswordReq(true);\n      return false;\n    }\n\n    if (password !== retypedPassword) {\n      setPasswordMismatched(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateAndRegister = () => {\n    if (isFormValidated()) {\n      console.log(\"validated\");\n      addUser({\n        variables: {\n          name: username,\n          email: email,\n          password: password\n        },\n\n        onCompleted() {\n          console.log(\"comp[lotede\");\n        }\n\n      });\n    }\n  };\n\n  const closeParentModal = () => closeModal ? closeModal() : false;\n\n  useEffect(() => {\n    refetch({\n      email\n    });\n    if (data && data.users && data.users.length > 0) setUserAlreadyExists(true);else setUserAlreadyExists(false);\n    return () => {};\n  }, [email, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"login-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    className: \"signupInput\",\n    onChange: e => {\n      setUserNameReq(false);\n      setUsername(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), userNameReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"*User name required.\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"E-mail\",\n    className: \"signupInput\",\n    onChange: e => {\n      setEmailReq(false);\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), emailReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"*Email required.\") : null, userAlreadyExists ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"User already exists by this email.\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    className: \"signupInput\",\n    onChange: e => {\n      setPasswordReq(false);\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), passwordReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"*Password required.\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    placeholder: \"Retype password\",\n    className: \"signupInput\",\n    onChange: e => {\n      setRetypedPasswordReq(false);\n      setPasswordMismatched(false);\n      setRetypedPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), retypedPasswordReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"*Retype password.\") : null, passwordMismatched ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"*Password mismatched.\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"signup_submit\",\n    value: \"Sign me up\",\n    onClick: e => validateAndRegister(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["E:/graphQl/client/src/components/sign-up/sign-in-form.js"],"names":["useMutation","useQuery","React","useState","useEffect","useContext","ADD_USER","GET_USER","SignUp","props","closeModal","username","setUsername","email","setEmail","password","setPassword","retypedPassword","setRetypedPassword","userNameReq","setUserNameReq","emailReq","setEmailReq","passwordReq","setPasswordReq","retypedPasswordReq","setRetypedPasswordReq","userAlreadyExists","setUserAlreadyExists","passwordMismatched","setPasswordMismatched","addUser","loading","data","refetch","variables","isFormValidated","validateAndRegister","console","log","name","onCompleted","closeParentModal","users","length","e","target","value"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { ADD_USER, GET_USER } from \"../../gql-helper/queries\";\r\nimport \"./sign-up-form.css\";\r\n\r\nexport default function SignUp(props) {\r\n  const { closeModal } = props,\r\n    [username, setUsername] = useState(\"\"),\r\n    [email, setEmail] = useState(\"\"),\r\n    [password, setPassword] = useState(\"\"),\r\n    [retypedPassword, setRetypedPassword] = useState(\"\"),\r\n    [userNameReq, setUserNameReq] = useState(false),\r\n    [emailReq, setEmailReq] = useState(false),\r\n    [passwordReq, setPasswordReq] = useState(false),\r\n    [retypedPasswordReq, setRetypedPasswordReq] = useState(false),\r\n    [userAlreadyExists, setUserAlreadyExists] = useState(false),\r\n    [passwordMismatched, setPasswordMismatched] = useState(false);\r\n\r\n  const [addUser] = useMutation(ADD_USER),\r\n    { loading, data, refetch } = useQuery(GET_USER, {\r\n      variables: { email: email },\r\n    });\r\n\r\n  const isFormValidated = () => {\r\n    if (!username) {\r\n      setUserNameReq(true);\r\n      return false;\r\n    }\r\n    if (!email) {\r\n      setEmailReq(true);\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      setPasswordReq(true);\r\n      return false;\r\n    }\r\n    if (!retypedPassword) {\r\n      setRetypedPasswordReq(true);\r\n      return false;\r\n    }\r\n\r\n    if (password !== retypedPassword) {\r\n      setPasswordMismatched(true);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const validateAndRegister = ()=>{\r\n\r\n    if(isFormValidated()){\r\n\r\n      console.log(\"validated\");\r\n      addUser({\r\n        variables: {\r\n          name: username,\r\n          email: email,\r\n          password: password,\r\n        },\r\n        onCompleted(){console.log(\"comp[lotede\")}\r\n      })\r\n    }\r\n  }\r\n\r\n  const closeParentModal = () => (closeModal ? closeModal() : false);\r\n\r\n  useEffect(() => {\r\n    refetch({ email });\r\n\r\n    if (data && data.users && data.users.length > 0) setUserAlreadyExists(true);\r\n    else setUserAlreadyExists(false);\r\n\r\n    return () => {};\r\n  }, [email, data]);\r\n\r\n  return (\r\n    <div id=\"login-box\">\r\n      <div className=\"left\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => {\r\n            setUserNameReq(false);\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        {userNameReq ? (\r\n          <span className=\"error-class\">*User name required.</span>\r\n        ) : null}\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"E-mail\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => {\r\n            setEmailReq(false);\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n        {emailReq ? (\r\n          <span className=\"error-class\">*Email required.</span>\r\n        ) : null}\r\n        {userAlreadyExists ? (\r\n          <span className=\"error-class\">\r\n            User already exists by this email.\r\n          </span>\r\n        ) : null}\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => {\r\n            setPasswordReq(false);\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        {passwordReq ? (\r\n          <span className=\"error-class\">*Password required.</span>\r\n        ) : null}\r\n\r\n        <input\r\n          type=\"password\"\r\n          name=\"password2\"\r\n          placeholder=\"Retype password\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => {\r\n            setRetypedPasswordReq(false);\r\n            setPasswordMismatched(false);\r\n            setRetypedPassword(e.target.value);\r\n          }}\r\n        />\r\n        {retypedPasswordReq ? (\r\n          <span className=\"error-class\">*Retype password.</span>\r\n        ) : null}\r\n        {passwordMismatched ? (\r\n          <span className=\"error-class\">*Password mismatched.</span>\r\n        ) : null}\r\n\r\n        <input\r\n          type=\"submit\"\r\n          name=\"signup_submit\"\r\n          value=\"Sign me up\"\r\n          onClick={(e) =>validateAndRegister()}\r\n        />\r\n      </div>\r\n\r\n      {/* <div className=\"right\">\r\n      <span className=\"loginwith\">Sign in with<br />social network</span>\r\n      \r\n      <button className=\"social-signin facebook\">Log in with facebook</button>\r\n      <button className=\"social-signin twitter\">Log in with Twitter</button>\r\n      <button className=\"social-signin google\">Log in with Google+</button>\r\n    </div> */}\r\n      {/* <div className=\"or\">OR</div> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}