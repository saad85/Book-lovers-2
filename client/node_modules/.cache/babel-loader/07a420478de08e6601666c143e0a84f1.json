{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\modals\\\\add-review-modals.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from \"reactstrap\";\nimport \"./add-review-modal.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport CustomDropdown from \"../dropdown/dropdown\";\nimport CustomGenreDropdown from \"../dropdown/dropdown\";\nimport { ADD_REVIEW, ADD_AUTHOR, AUTHORS, GET_REVIEW } from \"../../gql-helper/queries\";\n\nconst AddReviewModal = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true),\n        [title, setTitle] = useState(\"\"),\n        [author, setAuthor] = useState(\"\"),\n        [genre, setGenre] = useState(\"\"),\n        [desc, setDesc] = useState(\"\"),\n        [showAddNewAurthor, setShowAddNewAurthor] = useState(false),\n        [readOnly] = useState(false),\n        [authorsList, setAuthorsList] = useState([]),\n        [selectedAuthor, setSelectedAuthor] = useState(\"\"),\n        [hasAllMandatoryFields, setHasAllMandatoryFields] = useState(true),\n        [titleReq, setTitleReq] = useState(true),\n        [authorReq, setAuthorReq] = useState(true),\n        [imgId, setImgId] = useState(\"\");\n  const [addReview] = useMutation(ADD_REVIEW),\n        [addAuthor] = useMutation(ADD_AUTHOR),\n        {\n    data\n  } = useQuery(AUTHORS);\n  const genreList = [\"Action and adventure\", \"Bio-graphy\", \"Children's\", \"Graphic novel\", \"Poetry\", \"Political thriller\", \"Science fiction\"];\n\n  const toggle = () => setModal(!modal);\n\n  function setAuthorFromDropdown(text, value) {\n    setSelectedAuthor(value);\n  }\n\n  function setGenreFromDropdown(text, value) {\n    setGenre(value);\n  }\n\n  function uploadImage() {\n    let file = document.getElementById(\"img-uploader-btn\").files;\n\n    if (file.length > 0) {\n      let uploadedFile = file[0];\n      let reader = new FileReader();\n\n      reader.onload = function (fileLoadEvent) {\n        let srcData = fileLoadEvent.target.result;\n        if (srcData) uploadImgFileToApi(srcData);\n      };\n\n      reader.readAsDataURL(uploadedFile);\n    }\n  }\n\n  async function uploadImgFileToApi(srcData) {\n    await fetch(\"https://api.jsonbin.io/b\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        \"secret-key\": \"$2b$10$rhIFVqhUIEQwsbi0CwHLMe6jxkKyBD3otM2McKelyCAyWXJyFWQ7G\"\n      },\n      body: JSON.stringify({\n        imgSrc: srcData\n      })\n    }).then(async response => {\n      const {\n        id\n      } = await response.json();\n      setImgId(id);\n    });\n  }\n\n  function closeModal() {\n    setModal(!modal);\n\n    if (props.closeModal) {\n      setTimeout(() => {\n        props.closeModal(false);\n      }, 100);\n    }\n  } // var myDropzone = new Dropzone(\"div#myId\", { url: \"/file/post\"});\n\n\n  useEffect(() => {\n    if (data && data.authors && data.authors.length > 0) setAuthorsList(data.authors); //form validation\n\n    if (title && title.length > 0 && selectedAuthor && selectedAuthor.length > 0) setHasAllMandatoryFields(false);\n    if (title) setTitleReq(false);else setTitleReq(true);\n    if (selectedAuthor) setAuthorReq(false);else setAuthorReq(true);\n    return () => {};\n  }, [data, title, selectedAuthor]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    onClosed: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    style: {\n      backgroundColor: \"#f7f7f7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Add review\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Title:\", \" \", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"add a title\",\n    onChange: e => {\n      setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }), titleReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"req-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"*Required field\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Author:\", !showAddNewAurthor ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomDropdown, {\n    dropdownId: \"author\",\n    menus: authorsList,\n    setParentsAuthor: setAuthorFromDropdown,\n    context: \"add_review_authors\",\n    placeholder: \"Select author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }), \" \", \"or\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"add-new-aurthor\",\n    onClick: e => setShowAddNewAurthor(!showAddNewAurthor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    style: {\n      fontSize: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }), \" \", \"Add new\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"col-xs-7 col-sm-7 col-md-7 col-lg-7  \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"add new author\",\n    readOnly: readOnly,\n    onChange: e => {\n      setAuthor(e.target.value);\n    },\n    style: {\n      marginTop: \"10px\"\n    },\n    value: author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\",\n    id: \"addIcon\",\n    onClick: e => {\n      addAuthor({\n        variables: {\n          authorName: author\n        },\n        refetchQueries: [{\n          query: AUTHORS\n        }]\n      });\n      setShowAddNewAurthor(!showAddNewAurthor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\",\n    id: \"backIcon\",\n    onClick: e => setShowAddNewAurthor(!showAddNewAurthor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }), authorReq ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"req-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, \"*Required field\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-6 col-sm-6  col-md-6  col-lg-6 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, \"Genre:\", \" \", /*#__PURE__*/React.createElement(CustomGenreDropdown, {\n    dropdownId: \"genre\",\n    menus: genreList,\n    setParentsGenre: setGenreFromDropdown,\n    context: \"add_review_genre\",\n    placeholder: \"Select genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xs-6 col-sm-6  col-md-6  col-lg-6 img-section \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Upload a cover:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"img-uploader-btn\",\n    onChange: e => uploadImage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"How was it:\", \" \", /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Short summary\",\n    style: {\n      width: \"100%\"\n    },\n    onChange: e => {\n      setDesc(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    disabled: hasAllMandatoryFields,\n    onClick: e => {\n      closeModal();\n      addReview({\n        variables: {\n          title: title,\n          author: selectedAuthor,\n          genre: genre,\n          desc: desc,\n          imgId: imgId,\n          reviewerId: userId\n        },\n        refetchQueries: () => [{\n          query: GET_REVIEW,\n          variables: {\n            query: {}\n          }\n        }]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }), \" Add\"))));\n};\n\nexport default AddReviewModal;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/modals/add-review-modals.js"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","useMutation","useQuery","CustomDropdown","CustomGenreDropdown","ADD_REVIEW","ADD_AUTHOR","AUTHORS","GET_REVIEW","AddReviewModal","props","className","modal","setModal","title","setTitle","author","setAuthor","genre","setGenre","desc","setDesc","showAddNewAurthor","setShowAddNewAurthor","readOnly","authorsList","setAuthorsList","selectedAuthor","setSelectedAuthor","hasAllMandatoryFields","setHasAllMandatoryFields","titleReq","setTitleReq","authorReq","setAuthorReq","imgId","setImgId","addReview","addAuthor","data","genreList","toggle","setAuthorFromDropdown","text","value","setGenreFromDropdown","uploadImage","file","document","getElementById","files","length","uploadedFile","reader","FileReader","onload","fileLoadEvent","srcData","target","result","uploadImgFileToApi","readAsDataURL","fetch","method","headers","body","JSON","stringify","imgSrc","then","response","id","json","closeModal","setTimeout","authors","backgroundColor","e","fontSize","marginTop","variables","authorName","refetchQueries","query","width","reviewerId","userId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport \"./add-review-modal.css\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport CustomDropdown from \"../dropdown/dropdown\";\r\nimport CustomGenreDropdown from \"../dropdown/dropdown\";\r\n\r\nimport {\r\n  ADD_REVIEW,\r\n  ADD_AUTHOR,\r\n  AUTHORS,\r\n  GET_REVIEW,\r\n} from \"../../gql-helper/queries\";\r\n\r\nconst AddReviewModal = (props) => {\r\n  const { className } = props;\r\n\r\n  const [modal, setModal] = useState(true),\r\n    [title, setTitle] = useState(\"\"),\r\n    [author, setAuthor] = useState(\"\"),\r\n    [genre, setGenre] = useState(\"\"),\r\n    [desc, setDesc] = useState(\"\"),\r\n    [showAddNewAurthor, setShowAddNewAurthor] = useState(false),\r\n    [readOnly] = useState(false),\r\n    [authorsList, setAuthorsList] = useState([]),\r\n    [selectedAuthor, setSelectedAuthor] = useState(\"\"),\r\n    [hasAllMandatoryFields, setHasAllMandatoryFields] = useState(true),\r\n    [titleReq, setTitleReq] = useState(true),\r\n    [authorReq, setAuthorReq] = useState(true),\r\n    [imgId, setImgId] = useState(\"\");\r\n\r\n  const [addReview] = useMutation(ADD_REVIEW),\r\n    [addAuthor] = useMutation(ADD_AUTHOR),\r\n    { data } = useQuery(AUTHORS);\r\n\r\n  const genreList = [\r\n    \"Action and adventure\",\r\n    \"Bio-graphy\",\r\n    \"Children's\",\r\n    \"Graphic novel\",\r\n    \"Poetry\",\r\n    \"Political thriller\",\r\n    \"Science fiction\",\r\n  ];\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  function setAuthorFromDropdown(text, value) {\r\n    setSelectedAuthor(value);\r\n  }\r\n\r\n  function setGenreFromDropdown(text, value) {\r\n    setGenre(value);\r\n  }\r\n\r\n  function uploadImage() {\r\n    let file = document.getElementById(\"img-uploader-btn\").files;\r\n\r\n    if (file.length > 0) {\r\n      let uploadedFile = file[0];\r\n\r\n      let reader = new FileReader();\r\n\r\n      reader.onload = function (fileLoadEvent) {\r\n        let srcData = fileLoadEvent.target.result;\r\n\r\n        if (srcData) uploadImgFileToApi(srcData);\r\n      };\r\n\r\n      reader.readAsDataURL(uploadedFile);\r\n    }\r\n  }\r\n\r\n  async function uploadImgFileToApi(srcData) {\r\n    await fetch(\"https://api.jsonbin.io/b\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n        \"secret-key\":\r\n          \"$2b$10$rhIFVqhUIEQwsbi0CwHLMe6jxkKyBD3otM2McKelyCAyWXJyFWQ7G\",\r\n      },\r\n      body: JSON.stringify({ imgSrc: srcData }),\r\n    }).then(async (response) => {\r\n      const { id } = await response.json();\r\n      setImgId(id);\r\n    });\r\n  }\r\n\r\n  function closeModal() {\r\n    setModal(!modal);\r\n\r\n    if (props.closeModal) {\r\n      setTimeout(() => {\r\n        props.closeModal(false);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  // var myDropzone = new Dropzone(\"div#myId\", { url: \"/file/post\"});\r\n\r\n  useEffect(() => {\r\n\r\n    if (data && data.authors && data.authors.length > 0) setAuthorsList(data.authors);\r\n\r\n    //form validation\r\n    if (\r\n      title &&\r\n      title.length > 0 &&\r\n      selectedAuthor &&\r\n      selectedAuthor.length > 0\r\n    \r\n      ) setHasAllMandatoryFields(false);\r\n    \r\n\r\n    if (title) setTitleReq(false);\r\n    else setTitleReq(true);\r\n\r\n    if (selectedAuthor) setAuthorReq(false);\r\n    else setAuthorReq(true);\r\n\r\n    return () => {};\r\n  }, [data, title, selectedAuthor]);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        className={className}\r\n        onClosed={() => closeModal()}\r\n      >\r\n        <ModalHeader toggle={toggle} style={{ backgroundColor: \"#f7f7f7\" }}>\r\n          Add review\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n            <div className=\"form-field\">\r\n              Title:{\" \"}\r\n              <Input\r\n                placeholder=\"add a title\"\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n              />\r\n              {titleReq ? (\r\n                <span className=\"req-class\">*Required field</span>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              Author:\r\n              {!showAddNewAurthor ? (\r\n                <div>\r\n                  <>\r\n                    <CustomDropdown\r\n                      dropdownId=\"author\"\r\n                      menus={authorsList}\r\n                      setParentsAuthor={setAuthorFromDropdown}\r\n                      context=\"add_review_authors\"\r\n                      placeholder=\"Select author\"\r\n                    />{\" \"}\r\n                    or{\" \"}\r\n                    <span\r\n                      className=\"add-new-aurthor\"\r\n                      onClick={(e) => setShowAddNewAurthor(!showAddNewAurthor)}\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-plus\"\r\n                        style={{ fontSize: \"12px\" }}\r\n                      ></i>{\" \"}\r\n                      Add new\r\n                    </span>\r\n                  </>\r\n                </div>\r\n              ) : (\r\n                <span className=\"row\">\r\n                  <span className=\"col-xs-7 col-sm-7 col-md-7 col-lg-7  \">\r\n                    <Input\r\n                      placeholder=\"add new author\"\r\n                      readOnly={readOnly}\r\n                      onChange={(e) => {\r\n                        setAuthor(e.target.value);\r\n                      }}\r\n                      style={{ marginTop: \"10px\" }}\r\n                      value={author}\r\n                    />\r\n                  </span>\r\n                  <span\r\n                    className=\" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\"\r\n                    id=\"addIcon\"\r\n                    onClick={(e) => {\r\n                      addAuthor({\r\n                        variables: { authorName: author },\r\n                        refetchQueries: [{ query: AUTHORS }],\r\n                      });\r\n                      setShowAddNewAurthor(!showAddNewAurthor);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-plus\"></i>\r\n                  </span>\r\n                  <span\r\n                    className=\" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\"\r\n                    id=\"backIcon\"\r\n                    onClick={(e) => setShowAddNewAurthor(!showAddNewAurthor)}\r\n                  >\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                  </span>\r\n                </span>\r\n              )}\r\n              <div></div>\r\n              {authorReq ? (\r\n                <span className=\"req-class\">*Required field</span>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xs-6 col-sm-6  col-md-6  col-lg-6 \">\r\n                  Genre:{\" \"}\r\n                  <CustomGenreDropdown\r\n                    dropdownId=\"genre\"\r\n                    menus={genreList}\r\n                    setParentsGenre={setGenreFromDropdown}\r\n                    context=\"add_review_genre\"\r\n                    placeholder=\"Select genre\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-xs-6 col-sm-6  col-md-6  col-lg-6 img-section \">\r\n                  Upload a cover:\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"img-uploader-btn\"\r\n                    onChange={(e) => uploadImage()}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <img src={imgSrc} width=\"30px\"/> */}\r\n\r\n            <div className=\"form-field\">\r\n              How was it:{\" \"}\r\n              <textarea\r\n                placeholder=\"Short summary\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={(e) => {\r\n                  setDesc(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"secondary\"\r\n            disabled={hasAllMandatoryFields}\r\n            onClick={(e) => {\r\n              closeModal();\r\n              addReview({\r\n                variables: {\r\n                  title: title,\r\n                  author: selectedAuthor,\r\n                  genre: genre,\r\n                  desc: desc,\r\n                  imgId: imgId,\r\n                  reviewerId: userId\r\n                },\r\n                refetchQueries: () => [\r\n                  { query: GET_REVIEW, variables: { query: {} } },\r\n                ],\r\n              });\r\n            }}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Add\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReviewModal;\r\n"]},"metadata":{},"sourceType":"module"}