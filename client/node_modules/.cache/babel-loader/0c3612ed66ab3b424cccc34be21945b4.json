{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\popover\\\\popover.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nconst CustomPopover = props => {\n  const {\n    targetId,\n    showPopover,\n    title,\n    body\n  } = props;\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  console.log(\"body \", body);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  useEffect(() => {\n    if (showPopover) toggle();\n  }, [showPopover]);\n\n  function testFunction() {\n    console.log(\"test function\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    placement: \"bottom\",\n    isOpen: popoverOpen,\n    onBlur: e => testFunction(),\n    target: targetId,\n    toggle: toggle,\n    style: {\n      width: \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, body)));\n};\n\nexport default CustomPopover;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/popover/popover.js"],"names":["React","useState","useEffect","Button","Popover","PopoverHeader","PopoverBody","CustomPopover","props","targetId","showPopover","title","body","popoverOpen","setPopoverOpen","console","log","toggle","testFunction","e","width","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,aAA1B,EAAyCC,WAAzC,QAA4D,YAA5D;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA,KAAxB;AAA+BC,IAAAA;AAA/B,MAAwCJ,KAA9C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,IAApB;;AAEF,QAAMK,MAAM,GAAG,MAAMH,cAAc,CAAC,CAACD,WAAF,CAAnC;;AAEEX,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAGQ,WAAH,EAAgBO,MAAM;AAEzB,GAJQ,EAIP,CAACP,WAAD,CAJO,CAAT;;AAMA,WAASQ,YAAT,GAAuB;AACnBH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;AAIH,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,MAAM,EAAEH,WAApC;AAAiD,IAAA,MAAM,EAAEM,CAAC,IAAED,YAAY,EAAxE;AAA4E,IAAA,MAAM,EAAET,QAApF;AAA8F,IAAA,MAAM,EAAEQ,MAAtG;AAA+G,IAAA,KAAK,EAAE;AAAKG,MAAAA,KAAK,EAAE;AAAZ,KAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CV,KAA7C,CADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,IAAd,CAFF,CADF,CADF;AAQD,CA5BD;;AA8BA,eAAeL,aAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nconst CustomPopover = (props) => {\r\n    const {targetId, showPopover, title, body } = props;\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n    console.log(\"body \",body);\r\n\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n\r\n    useEffect(()=>{\r\n\r\n        if(showPopover) toggle();\r\n\r\n    },[showPopover])\r\n\r\n    function testFunction(){\r\n        console.log(\"test function\")\r\n    }\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n      <Popover placement=\"bottom\" isOpen={popoverOpen} onBlur={e=>testFunction()} target={targetId} toggle={toggle}  style={{    width: \"150px\"}}>\r\n        <PopoverHeader style={{textAlign:\"center\"}}>{title}</PopoverHeader>\r\n        <PopoverBody>{body}</PopoverBody>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomPopover;"]},"metadata":{},"sourceType":"module"}