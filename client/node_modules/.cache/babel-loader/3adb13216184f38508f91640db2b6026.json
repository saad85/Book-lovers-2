{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\popover\\\\popover.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\nimport { FilterContext } from \"../../context-helper/context-helper\";\nimport AccountPopoverOptions from \"../../components/navbar/account-option-popover/account-option-popover\";\n\nconst CustomPopover = props => {\n  const {\n    targetId,\n    title,\n    body\n  } = props,\n        {\n    popover\n  } = useContext(FilterContext),\n        {\n    showPopover,\n    setShowPopover\n  } = popover,\n        [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  useEffect(() => {\n    if (showPopover) toggle();\n  }, [showPopover]); //hide Popover On Outside Click\n\n  document.body.onclick = function (e) {\n    const clickedEl = e.target,\n          popoverClassList = [\"popover-header\", \"popover-body\"];\n    if (clickedEl && !popoverClassList.includes(clickedEl.className)) setPopoverOpen(false); // if(clickedEl && clickedEl.className === \"acc-option-popover\") {\n    //   setTimeout(()=>{\n    //     setPopoverOpen(false);\n    //   },900)\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    placement: \"bottom\",\n    id: \"popover-container\",\n    isOpen: popoverOpen,\n    target: targetId,\n    toggle: toggle,\n    style: {\n      width: \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AccountPopoverOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 22\n    }\n  }))));\n};\n\nexport default CustomPopover;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/popover/popover.js"],"names":["React","useState","useEffect","useContext","Button","Popover","PopoverHeader","PopoverBody","FilterContext","AccountPopoverOptions","CustomPopover","props","targetId","title","body","popover","showPopover","setShowPopover","popoverOpen","setPopoverOpen","toggle","document","onclick","e","clickedEl","target","popoverClassList","includes","className","width","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,aAA1B,EAAyCC,WAAzC,QAA4D,YAA5D;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,OAAOC,qBAAP,MAAkC,uEAAlC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAA4BH,KAAlC;AAAA,QACE;AAAEI,IAAAA;AAAF,MAAcZ,UAAU,CAACK,aAAD,CAD1B;AAAA,QAEE;AAAEQ,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCF,OAFpC;AAAA,QAGE,CAACG,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,KAAD,CAH1C;;AAKA,QAAMmB,MAAM,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAAnC;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,WAAJ,EAAiBI,MAAM;AACxB,GAFQ,EAEN,CAACJ,WAAD,CAFM,CAAT,CAR+B,CAY/B;;AACAK,EAAAA,QAAQ,CAACP,IAAT,CAAcQ,OAAd,GAAwB,UAAUC,CAAV,EAAa;AACnC,UAAMC,SAAS,GAAGD,CAAC,CAACE,MAApB;AAAA,UACEC,gBAAgB,GAAG,CACjB,gBADiB,EAEjB,cAFiB,CADrB;AAMA,QAAIF,SAAS,IAAI,CAACE,gBAAgB,CAACC,QAAjB,CAA0BH,SAAS,CAACI,SAApC,CAAlB,EACET,cAAc,CAAC,KAAD,CAAd,CARiC,CASnC;AACA;AACA;AACA;AACA;AACD,GAdD;;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,EAAE,EAAC,mBAFL;AAGE,IAAA,MAAM,EAAED,WAHV;AAIE,IAAA,MAAM,EAAEN,QAJV;AAKE,IAAA,MAAM,EAAEQ,MALV;AAME,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDjB,KAAhD,CARF,eASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,CATF,CADF,CADF;AAeD,CA5CD;;AA8CA,eAAeH,aAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\r\nimport { FilterContext } from \"../../context-helper/context-helper\";\r\nimport AccountPopoverOptions from \"../../components/navbar/account-option-popover/account-option-popover\";\r\n\r\nconst CustomPopover = (props) => {\r\n  const { targetId, title, body } = props,\r\n    { popover } = useContext(FilterContext),\r\n    { showPopover, setShowPopover } = popover,\r\n    [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n\r\n  useEffect(() => {\r\n    if (showPopover) toggle();\r\n  }, [showPopover]);\r\n\r\n  //hide Popover On Outside Click\r\n  document.body.onclick = function (e) {\r\n    const clickedEl = e.target,\r\n      popoverClassList = [\r\n        \"popover-header\",\r\n        \"popover-body\"\r\n      ];\r\n\r\n    if (clickedEl && !popoverClassList.includes(clickedEl.className))\r\n      setPopoverOpen(false);\r\n    // if(clickedEl && clickedEl.className === \"acc-option-popover\") {\r\n    //   setTimeout(()=>{\r\n    //     setPopoverOpen(false);\r\n    //   },900)\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Popover\r\n        placement=\"bottom\"\r\n        id=\"popover-container\"\r\n        isOpen={popoverOpen}\r\n        target={targetId}\r\n        toggle={toggle}\r\n        style={{ width: \"150px\" }}\r\n      >\r\n        <PopoverHeader style={{ textAlign: \"center\" }}>{title}</PopoverHeader>\r\n        <PopoverBody><AccountPopoverOptions/></PopoverBody>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomPopover;\r\n"]},"metadata":{},"sourceType":"module"}