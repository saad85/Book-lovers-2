{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\dropdown\\\\dropdown.js\";\nimport React, { useState } from 'react';\nimport { Dropdown, DropdownMenu, DropdownToggle, InputGroup, Input } from 'reactstrap';\nimport './dropdown.css';\nconst CustomToggle = React.forwardRef(({\n  children,\n  onClick\n}, ref) => /*#__PURE__*/React.createElement(\"a\", {\n  href: \"\",\n  ref: ref,\n  onClick: e => {\n    e.preventDefault();\n    onClick(e);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, children));\n\nconst Example = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [testValue, setTestValue] = useState('');\n  const [menu, setMenu] = useState([\"Value oo\", \"vasdkaf\"]);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    as: CustomToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: testValue,\n    placeholder: \"please select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, menu.map(value => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-menu\",\n    onClick: e => {\n      console.log(value);\n      setDropdownOpen(false);\n      setTestValue(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 22\n    }\n  }, value))));\n};\n\nexport default Example;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/dropdown/dropdown.js"],"names":["React","useState","Dropdown","DropdownMenu","DropdownToggle","InputGroup","Input","CustomToggle","forwardRef","children","onClick","ref","e","preventDefault","Example","dropdownOpen","setDropdownOpen","testValue","setTestValue","menu","setMenu","toggle","prevState","map","value","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,cAAjC,EAAiDC,UAAjD,EAA6DC,KAA7D,QAA0E,YAA1E;AACA,OAAO,gBAAP;AAEA,MAAMC,YAAY,GAAGP,KAAK,CAACQ,UAAN,CAAiB,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,EAAwBC,GAAxB,kBAClC;AAAG,EAAA,IAAI,EAAC,EAAR;AAAW,EAAA,GAAG,EAAEA,GAAhB;AAAqB,EAAA,OAAO,EAAGC,CAAD,IAAO;AAACA,IAAAA,CAAC,CAACC,cAAF;AAAoBH,IAAAA,OAAO,CAACE,CAAD,CAAP;AAAY,GAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,QADH,CADiB,CAArB;;AAOA,MAAMK,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,IAAD,EAAMC,OAAN,IAAiBnB,QAAQ,CAAC,CAAC,UAAD,EAAY,SAAZ,CAAD,CAA/B;;AAEA,QAAMoB,MAAM,GAAG,MAAML,eAAe,CAACM,SAAS,IAAI,CAACA,SAAf,CAApC;;AAEA,sBACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEP,YAAlB;AAAgC,IAAA,MAAM,EAAEM,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAEd,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKF,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,KAAD;AAAQ,IAAA,KAAK,EAAEU,SAAf;AAA0B,IAAA,WAAW,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALE,CADF,eAcE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHE,IAAI,CAACI,GAAL,CAAUC,KAAD,iBAAS;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEZ,CAAC,IAAE;AAACa,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAoBR,MAAAA,eAAe,CAAC,KAAD,CAAf;AAAwBE,MAAAA,YAAY,CAACM,KAAD,CAAZ;AAAoB,KAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2GA,KAA3G,CAAlB,CADG,CAdF,CADF;AAqBD,CA5BD;;AA8BA,eAAeV,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Dropdown, DropdownMenu, DropdownToggle, InputGroup, Input } from 'reactstrap';\r\nimport './dropdown.css'\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a href=\"\" ref={ref} onClick={(e) => {e.preventDefault(); onClick(e);}}>\r\n      {children}\r\n     \r\n    </a>\r\n  ));\r\n\r\nconst Example = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [testValue, setTestValue] = useState('');\r\n  const [menu,setMenu] = useState([\"Value oo\",\"vasdkaf\"]);\r\n\r\n  const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle as={CustomToggle}\r\n       \r\n      >\r\n         \r\n    {/* <input  type=\"test\" className=\"dropdown-box\" value={testValue} placeholder=\"please select\"/>    */}\r\n    <InputGroup>\r\n        {/* <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText>@</InputGroupText>\r\n        </InputGroupAddon> */}\r\n        <Input  value={testValue} placeholder=\"please select\" />\r\n      </InputGroup>\r\n       \r\n      </DropdownToggle>\r\n      <DropdownMenu>\r\n  {menu.map((value)=><div className=\"drop-menu\" onClick={e=>{console.log(value); setDropdownOpen(false); setTestValue(value)}}>{value}</div>)}\r\n        \r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default Example;"]},"metadata":{},"sourceType":"module"}