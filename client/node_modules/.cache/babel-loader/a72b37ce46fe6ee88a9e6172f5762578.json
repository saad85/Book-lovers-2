{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\popover\\\\popover.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nconst CustomPopover = props => {\n  const {\n    targetId,\n    showPopover\n  } = props;\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  useEffect(() => {\n    if (showPopover) toggle();\n  }, [showPopover]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    placement: \"bottom\",\n    isOpen: popoverOpen,\n    target: targetId,\n    toggle: toggle,\n    style: {\n      width: \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Popover Title\"), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.\")));\n};\n\nexport default CustomPopover;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/popover/popover.js"],"names":["React","useState","useEffect","Button","Popover","PopoverHeader","PopoverBody","CustomPopover","props","targetId","showPopover","popoverOpen","setPopoverOpen","toggle","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,aAA1B,EAAyCC,WAAzC,QAA4D,YAA5D;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BF,KAAhC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;;AAEF,QAAMY,MAAM,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAAnC;;AAEET,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAGQ,WAAH,EAAgBG,MAAM;AAEzB,GAJQ,EAIP,CAACH,WAAD,CAJO,CAAT;AAMF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,MAAM,EAAEC,WAApC;AAAkD,IAAA,MAAM,EAAEF,QAA1D;AAAoE,IAAA,MAAM,EAAEI,MAA5E;AAAoF,IAAA,KAAK,EAAE;AAAKC,MAAAA,KAAK,EAAE;AAAZ,KAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+HAFF,CADF,CADF;AAQD,CApBD;;AAsBA,eAAeP,aAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nconst CustomPopover = (props) => {\r\n    const {targetId, showPopover} = props;\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n\r\n    useEffect(()=>{\r\n\r\n        if(showPopover) toggle();\r\n\r\n    },[showPopover])\r\n\r\n  return (\r\n    <div>\r\n      <Popover placement=\"bottom\" isOpen={popoverOpen}  target={targetId} toggle={toggle} style={{    width: \"150px\"}}>\r\n        <PopoverHeader>Popover Title</PopoverHeader>\r\n        <PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</PopoverBody>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomPopover;"]},"metadata":{},"sourceType":"module"}