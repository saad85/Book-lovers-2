{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\dropdown\\\\dropdown.js\";\nimport React, { useState } from 'react';\nimport { Dropdown, DropdownMenu, DropdownToggle, InputGroup, Input } from 'reactstrap';\nimport './dropdown.css';\nconst CustomToggle = React.forwardRef(({\n  children,\n  onClick\n}, ref) => /*#__PURE__*/React.createElement(\"a\", {\n  href: \"\",\n  ref: ref,\n  onClick: e => {\n    e.preventDefault();\n    onClick(e);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, children));\nconst CustomMenu = React.forwardRef(({\n  children,\n  style,\n  className,\n  'aria-labelledby': labeledBy\n}, ref) => {\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: style,\n    className: className,\n    \"aria-labelledby\": labeledBy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: testValue,\n    autoFocus: true,\n    className: \"mx-3 my-2 w-auto\",\n    placeholder: \"Type to filter...\",\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    style: {\n      color: \"#5d5f5e !important\",\n      fontSize: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().startsWith(value))));\n});\n\nconst Example = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [testValue, setTestValue] = useState('');\n  const [menu, setMenu] = useState([\"Value oo\", \"vasdkaf\"]);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    as: CustomToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DropdownMenu, {\n    as: CustomMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, menu.map(value => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-menu\",\n    onClick: e => {\n      console.log(value);\n      setDropdownOpen(false);\n      setTestValue(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 22\n    }\n  }, value))));\n};\n\nexport default Example;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/dropdown/dropdown.js"],"names":["React","useState","Dropdown","DropdownMenu","DropdownToggle","InputGroup","Input","CustomToggle","forwardRef","children","onClick","ref","e","preventDefault","CustomMenu","style","className","labeledBy","value","setValue","testValue","target","color","fontSize","Children","toArray","filter","child","props","toLowerCase","startsWith","Example","dropdownOpen","setDropdownOpen","setTestValue","menu","setMenu","toggle","prevState","map","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Dropdown, DropdownMenu, DropdownToggle, InputGroup, Input } from 'reactstrap';\r\nimport './dropdown.css'\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a href=\"\" ref={ref} onClick={(e) => {e.preventDefault(); onClick(e);}}>\r\n      {children}\r\n     \r\n    </a>\r\n  ));\r\n\r\n  const CustomMenu = React.forwardRef(({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div ref={ref} style={style} className={className} aria-labelledby={labeledBy}>\r\n        \r\n         <InputGroup>\r\n      \r\n        <Input  value={testValue} autoFocus className=\"mx-3 my-2 w-auto\" placeholder=\"Type to filter...\" onChange={(e) => setValue(e.target.value)} />\r\n      </InputGroup>\r\n        {/* <FormControl /> */}\r\n        \r\n        <ul className=\"list-unstyled\" style={{ color:\"#5d5f5e !important\",fontSize: \"12px\"}}>\r\n          {React.Children.toArray(children).filter(\r\n            (child) => !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nconst Example = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [testValue, setTestValue] = useState('');\r\n  const [menu,setMenu] = useState([\"Value oo\",\"vasdkaf\"]);\r\n\r\n  const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle as={CustomToggle}\r\n       \r\n      >\r\n         \r\n    {/* <input  type=\"test\" className=\"dropdown-box\" value={testValue} placeholder=\"please select\"/>    */}\r\n    {/* <InputGroup>\r\n      \r\n        <Input  value={testValue} placeholder=\"please select\" />\r\n      </InputGroup> */}\r\n       \r\n      </DropdownToggle>\r\n      <DropdownMenu as={CustomMenu}>\r\n  {menu.map((value)=><div className=\"drop-menu\" onClick={e=>{console.log(value); setDropdownOpen(false); setTestValue(value)}}>{value}</div>)}\r\n        \r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default Example;"]},"metadata":{},"sourceType":"module"}