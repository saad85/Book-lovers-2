{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-in-form.js\";\nimport { useMutation } from \"@apollo/client\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { ADD_USER } from \"../../gql-helper/queries\";\nimport \"./sign-up-form.css\";\nexport default function SignUp(props) {\n  const [username, setUsername] = useState(\"\"),\n        [email, setEmail] = useState(\"\"),\n        [password, setPassword] = useState(\"\"),\n        [retypedPassword, setRetypedPassword] = useState(\"\"),\n        [userNameReq, setUserNameReq] = useState(false),\n        [emailReq, setEmailReq] = useState(false),\n        [passwordReq, setPasswordReq] = useState(false),\n        [retypedPasswordReq, setRetypedPasswordReq] = useState(false),\n        [passwordMismatched, setPasswordMismatched] = useState(false);\n  const [addUser] = useMutation(ADD_USER);\n\n  const isFormValidated = () => {\n    if (!username) {\n      setUserNameReq(true);\n      return false;\n    }\n\n    if (!email) {\n      setEmailReq(true);\n      return false;\n    }\n\n    if (!password) {\n      setPasswordReq(true);\n      return false;\n    }\n\n    if (!retypedPassword) {\n      setRetypedPasswordReq(true);\n      return false;\n    }\n\n    if (password !== retypedPassword) {\n      setPasswordMismatched(false);\n      return false;\n    }\n\n    console.log(\"username\", username);\n    console.log(\"email\", email);\n    console.log(\"password\", password);\n    console.log(\"retypedPassword\", retypedPassword);\n    return true;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"login-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    className: \"signupInput\",\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"E-mail\",\n    className: \"signupInput\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    className: \"signupInput\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    placeholder: \"Retype password\",\n    className: \"signupInput\",\n    onChange: e => setRetypedPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"signup_submit\",\n    value: \"Sign me up\",\n    onClick: e => isFormValidated() ? addUser({\n      variables: {\n        name: username,\n        email: email,\n        password: password\n      }\n    }) : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["E:/graphQl/client/src/components/sign-up/sign-in-form.js"],"names":["useMutation","React","useState","useEffect","useContext","ADD_USER","SignUp","props","username","setUsername","email","setEmail","password","setPassword","retypedPassword","setRetypedPassword","userNameReq","setUserNameReq","emailReq","setEmailReq","passwordReq","setPasswordReq","retypedPasswordReq","setRetypedPasswordReq","passwordMismatched","setPasswordMismatched","addUser","isFormValidated","console","log","e","target","value","variables","name"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { ADD_USER } from \"../../gql-helper/queries\";\r\nimport \"./sign-up-form.css\";\r\n\r\nexport default function SignUp(props) {\r\n  const [username, setUsername] = useState(\"\"),\r\n    [email, setEmail] = useState(\"\"),\r\n    [password, setPassword] = useState(\"\"),\r\n    [retypedPassword, setRetypedPassword] = useState(\"\"),\r\n    [userNameReq, setUserNameReq] = useState(false),\r\n    [emailReq, setEmailReq] = useState(false),\r\n    [passwordReq, setPasswordReq] = useState(false),\r\n    [retypedPasswordReq, setRetypedPasswordReq] = useState(false),\r\n    [passwordMismatched, setPasswordMismatched] = useState(false);\r\n\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const isFormValidated = () => {\r\n    if (!username) {\r\n      setUserNameReq(true);\r\n      return false;\r\n    }\r\n    if (!email) {\r\n      setEmailReq(true);\r\n      return false;\r\n    }\r\n    if (!password) {\r\n      setPasswordReq(true);\r\n      return false;\r\n    }\r\n    if (!retypedPassword) {\r\n      setRetypedPasswordReq(true);\r\n      return false;\r\n    }\r\n\r\n    if (password !== retypedPassword) {\r\n      setPasswordMismatched(false);\r\n      return false;\r\n    }\r\n\r\n    console.log(\"username\", username);\r\n    console.log(\"email\", email);\r\n    console.log(\"password\", password);\r\n    console.log(\"retypedPassword\", retypedPassword);\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div id=\"login-box\">\r\n      <div className=\"left\">\r\n        {/* \r\n      <div style={{marginBottom: \"20px\"}}>\r\n        <h1>Sign up</h1> <span style={{float:\"right\",marginTop: \"-47px\",cursor:\"pointer\"}}><i className=\"fa fa-times\"></i></span>\r\n      </div> */}\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"E-mail\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password2\"\r\n          placeholder=\"Retype password\"\r\n          className=\"signupInput\"\r\n          onChange={(e) => setRetypedPassword(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"submit\"\r\n          name=\"signup_submit\"\r\n          value=\"Sign me up\"\r\n          onClick={(e) =>\r\n            isFormValidated()\r\n              ? addUser({\r\n                  variables: {\r\n                    name: username,\r\n                    email: email,\r\n                    password: password,\r\n                  },\r\n                })\r\n              : false\r\n          }\r\n        />\r\n      </div>\r\n\r\n      {/* <div className=\"right\">\r\n      <span className=\"loginwith\">Sign in with<br />social network</span>\r\n      \r\n      <button className=\"social-signin facebook\">Log in with facebook</button>\r\n      <button className=\"social-signin twitter\">Log in with Twitter</button>\r\n      <button className=\"social-signin google\">Log in with Google+</button>\r\n    </div> */}\r\n      {/* <div className=\"or\">OR</div> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}