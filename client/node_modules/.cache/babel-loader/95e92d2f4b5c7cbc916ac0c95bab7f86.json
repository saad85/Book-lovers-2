{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport \"./App.css\";\nimport BookSection from \"./components/books-section/index\";\nimport Navbar from \"./components/navbar/navbar\";\nimport SearchSection from \"./components/search-section/search-section\";\nimport { FilterContext } from \"./context-helper/context-helper\";\nimport SignInForm from \"./components/sign-up/sign-in-form\";\nimport cookies from 'js-cookie';\nimport jwt from 'jsonwebtoken';\n\nfunction App() {\n  const [searchedText, setSearchedText] = useState(\"\"),\n        [rootGenre, setRootGenreFilter] = useState(\"\"),\n        [rootAuthorFilter, setRootAuthorFilter] = useState(\"\"),\n        [showPopover, setShowPopover] = useState(\"\"),\n        [showLoginModal, setShowLoginModal] = useState(\"\");\n  let token = cookies.get('token');\n  console.log(\"token \", token);\n  let decoded = jwt.decode(token);\n  console.log(\"decoded \", decoded);\n  console.log(\"decoded header\", decoded.header);\n  console.log(\"decoded payload\", decoded.payload);\n\n  const updateSearchText = text => {\n    setSearchedText(text);\n  };\n\n  const authorFilter = useMemo(() => ({\n    rootAuthorFilter,\n    setRootAuthorFilter\n  }), [rootAuthorFilter, setRootAuthorFilter]),\n        popover = useMemo(() => ({\n    showPopover,\n    setShowPopover\n  }), [showPopover, setShowPopover]),\n        loginModal = useMemo(() => ({\n    showLoginModal,\n    setShowLoginModal\n  }), [showLoginModal, setShowLoginModal]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FilterContext.Provider, {\n    value: {\n      popover,\n      loginModal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(FilterContext.Provider, {\n    value: {\n      rootGenre,\n      setRootGenreFilter,\n      authorFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchSection, {\n    updateParentSearchText: updateSearchText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(BookSection, {\n    searchedText: searchedText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/graphQl/client/src/App.js"],"names":["React","useState","useEffect","useMemo","BookSection","Navbar","SearchSection","FilterContext","SignInForm","cookies","jwt","App","searchedText","setSearchedText","rootGenre","setRootGenreFilter","rootAuthorFilter","setRootAuthorFilter","showPopover","setShowPopover","showLoginModal","setShowLoginModal","token","get","console","log","decoded","decode","header","payload","updateSearchText","text","authorFilter","popover","loginModal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport \"./App.css\";\nimport BookSection from \"./components/books-section/index\";\nimport Navbar from \"./components/navbar/navbar\";\nimport SearchSection from \"./components/search-section/search-section\";\nimport { FilterContext } from \"./context-helper/context-helper\";\nimport SignInForm from \"./components/sign-up/sign-in-form\";\nimport cookies from 'js-cookie';\nimport jwt from 'jsonwebtoken'\n\nfunction App() {\n  const [searchedText, setSearchedText] = useState(\"\"),\n    [rootGenre, setRootGenreFilter] = useState(\"\"),\n    [rootAuthorFilter, setRootAuthorFilter] = useState(\"\"),\n    [showPopover, setShowPopover] = useState(\"\"),\n    [showLoginModal, setShowLoginModal] = useState(\"\");\n\n\n    let token = cookies.get('token');\n\n    console.log(\"token \",token);\n\n    let decoded = jwt.decode(token);\n\n    console.log(\"decoded \",decoded);\n    console.log(\"decoded header\",decoded.header);\n    console.log(\"decoded payload\",decoded.payload);\n\n\n\n  const updateSearchText = (text) => {\n    setSearchedText(text);\n  };\n\n  const authorFilter = useMemo(\n      () => ({ rootAuthorFilter, setRootAuthorFilter }),\n      [rootAuthorFilter, setRootAuthorFilter]\n    ),\n    popover = useMemo(() => ({ showPopover, setShowPopover }), [\n      showPopover,\n      setShowPopover,\n    ]),\n    loginModal = useMemo(() => ({ showLoginModal, setShowLoginModal }), [\n      showLoginModal,\n      setShowLoginModal,\n    ]);\n\n  return (\n    <div className=\"App\">\n      <FilterContext.Provider value={{ popover, loginModal }}>\n        <div className=\"Navbar\">\n          <Navbar />\n        </div>\n      </FilterContext.Provider>\n\n      <FilterContext.Provider\n        value={{ rootGenre, setRootGenreFilter, authorFilter }}\n      >\n        <header className=\"App-header\">\n          <SearchSection updateParentSearchText={updateSearchText} />\n        </header>\n        <BookSection searchedText={searchedText} />\n      </FilterContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}