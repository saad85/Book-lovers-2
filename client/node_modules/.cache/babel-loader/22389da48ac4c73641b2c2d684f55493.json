{"ast":null,"code":"var _jsxFileName = \"E:\\\\graphQl\\\\client\\\\src\\\\Utlies\\\\add-review-modals.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Tooltip } from \"reactstrap\";\nimport \"./add-review-modal.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport CustomDropdown from \"./dropdown/dropdown\";\nimport CustomGenreDropdown from \"./dropdown/dropdown\";\nimport { ADD_REVIEW, ADD_AUTHOR, AUTHORS, GET_REVIEW } from \"../gql-helper/queries\";\n\nconst AddReviewModal = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [desc, setDesc] = useState(true);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showAddNewAurthor, setShowAddNewAurthor] = useState(false);\n  const [readOnly, setReadOnly] = useState(false);\n  const [authorsList, setAuthorsList] = useState([]);\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\n  const [hasAllMandatoryFields, setHasAllMandatoryFields] = useState(true);\n  const [addTooltipOpen, setAddTooltipOpen] = useState(false);\n  const [backTooltipOpen, setBackTooltipOpen] = useState(false);\n\n  const addToggleTooltip = () => setAddTooltipOpen(!addTooltipOpen);\n\n  const backToggleTooltip = () => setBackTooltipOpen(!backTooltipOpen);\n\n  const [addReview, {\n    reviewData\n  }] = useMutation(ADD_REVIEW);\n  const [addAuthor, {\n    authordata\n  }] = useMutation(ADD_AUTHOR);\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(AUTHORS);\n  const genreList = [\"Action and adventure\", \"Bio-graphy\", \"Children's\", \"Graphic novel\", \"Poetry\", \"Political thriller\", \"Science fiction\"];\n\n  const toggle = () => setModal(!modal);\n\n  function setAuthorFromDropdown(text, value) {\n    setSelectedAuthor(value);\n  }\n\n  function setGenreFromDropdown(text, value) {\n    setGenre(value);\n    console.log(\"value come from dropdown \", value);\n    console.log(\"Author id after selected \", selectedAuthor);\n  }\n\n  function closeModal() {\n    setModal(!modal);\n\n    if (props.closeModal) {\n      setTimeout(() => {\n        props.closeModal(false);\n      }, 100);\n    }\n  }\n\n  useEffect(() => {\n    if (props.updateReview) props.updateReview();\n\n    if (data && data.authors && data.authors.length > 0) {\n      setAuthorsList(data.authors);\n    } //form validation\n\n\n    if (title.length > 0 && selectedAuthor.length > 0) {\n      setHasAllMandatoryFields(false);\n    }\n\n    return () => {};\n  }, [data, title, selectedAuthor]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    onClosed: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    style: {\n      backgroundColor: \"#f7f7f7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Add review\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Title:\", \" \", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"add a title\",\n    onChange: e => {\n      setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Author:\", !showAddNewAurthor ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomDropdown, {\n    dropdownId: \"author\",\n    menus: authorsList,\n    setParentsAuthor: setAuthorFromDropdown,\n    context: \"authors\",\n    placeholder: \"Select author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }), \" \", \"or\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"add-new-aurthor\",\n    onClick: e => setShowAddNewAurthor(!showAddNewAurthor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }), \" Add new\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"col-xs-7 col-sm-7 col-md-7 col-lg-7  \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"add new author\",\n    readOnly: readOnly,\n    onChange: e => {\n      setAuthor(e.target.value);\n      setShowAddNewAurthor(!showAddNewAurthor);\n    },\n    style: {\n      marginTop: \"10px\"\n    },\n    value: author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\",\n    id: \"addIcon\",\n    onClick: e => {\n      addAuthor({\n        variables: {\n          authorName: author\n        },\n        refetchQueries: [{\n          query: AUTHORS\n        }]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\",\n    id: \"backIcon\",\n    onClick: e => setShowAddNewAurthor(!showAddNewAurthor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, \"Genre:\", \" \", /*#__PURE__*/React.createElement(CustomGenreDropdown, {\n    dropdownId: \"genre\",\n    menus: genreList,\n    setParentsAuthor: setGenreFromDropdown,\n    context: \"genre\",\n    placeholder: \"Select genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"How was it:\", \" \", /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Short summary\",\n    style: {\n      width: \"100%\"\n    },\n    onChange: e => {\n      setDesc(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    disabled: hasAllMandatoryFields,\n    onClick: e => {\n      closeModal();\n      addReview({\n        variables: {\n          title: title,\n          author: selectedAuthor,\n          genre: genre,\n          desc: desc\n        },\n        refetchQueries: [{\n          query: GET_REVIEW\n        }]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }), \" Add\"))));\n};\n\nexport default AddReviewModal;","map":{"version":3,"sources":["E:/graphQl/client/src/Utlies/add-review-modals.js"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Tooltip","useMutation","useQuery","CustomDropdown","CustomGenreDropdown","ADD_REVIEW","ADD_AUTHOR","AUTHORS","GET_REVIEW","AddReviewModal","props","className","modal","setModal","title","setTitle","author","setAuthor","genre","setGenre","desc","setDesc","showDropdown","setShowDropdown","showAddNewAurthor","setShowAddNewAurthor","readOnly","setReadOnly","authorsList","setAuthorsList","selectedAuthor","setSelectedAuthor","hasAllMandatoryFields","setHasAllMandatoryFields","addTooltipOpen","setAddTooltipOpen","backTooltipOpen","setBackTooltipOpen","addToggleTooltip","backToggleTooltip","addReview","reviewData","addAuthor","authordata","error","loading","data","genreList","toggle","setAuthorFromDropdown","text","value","setGenreFromDropdown","console","log","closeModal","setTimeout","updateReview","authors","length","backgroundColor","e","target","marginTop","variables","authorName","refetchQueries","query","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport \"./add-review-modal.css\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport CustomDropdown from \"./dropdown/dropdown\";\r\nimport CustomGenreDropdown from \"./dropdown/dropdown\";\r\n\r\nimport {\r\n  ADD_REVIEW,\r\n  ADD_AUTHOR,\r\n  AUTHORS,\r\n  GET_REVIEW,\r\n} from \"../gql-helper/queries\";\r\n\r\nconst AddReviewModal = (props) => {\r\n  const { className } = props;\r\n\r\n  const [modal, setModal] = useState(true);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [desc, setDesc] = useState(true);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [showAddNewAurthor, setShowAddNewAurthor] = useState(false);\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [authorsList, setAuthorsList] = useState([]);\r\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\r\n  const [hasAllMandatoryFields, setHasAllMandatoryFields] = useState(true);\r\n\r\n  const [addTooltipOpen, setAddTooltipOpen] = useState(false);\r\n  const [backTooltipOpen, setBackTooltipOpen] = useState(false);\r\n\r\n  const addToggleTooltip = () => setAddTooltipOpen(!addTooltipOpen);\r\n  const backToggleTooltip = () => setBackTooltipOpen(!backTooltipOpen);\r\n\r\n  const [addReview, { reviewData }] = useMutation(ADD_REVIEW);\r\n  const [addAuthor, { authordata }] = useMutation(ADD_AUTHOR);\r\n  const { error, loading, data } = useQuery(AUTHORS);\r\n\r\n  const genreList = [\r\n    \"Action and adventure\",\r\n    \"Bio-graphy\",\r\n    \"Children's\",\r\n    \"Graphic novel\",\r\n    \"Poetry\",\r\n    \"Political thriller\",\r\n    \"Science fiction\"\r\n  ];\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  function setAuthorFromDropdown(text, value) {\r\n    setSelectedAuthor(value);\r\n\r\n  }\r\n\r\n  function setGenreFromDropdown(text, value){\r\n    setGenre(value);\r\n    \r\n    console.log(\"value come from dropdown \", value);\r\n    console.log(\"Author id after selected \", selectedAuthor);\r\n  }\r\n\r\n  function closeModal() {\r\n    setModal(!modal);\r\n\r\n    if (props.closeModal) {\r\n      setTimeout(() => {\r\n        props.closeModal(false);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.updateReview) props.updateReview();\r\n\r\n    if (data && data.authors && data.authors.length > 0) {\r\n      setAuthorsList(data.authors);\r\n    }\r\n\r\n    //form validation\r\n    if (title.length > 0 && selectedAuthor.length > 0) {\r\n      setHasAllMandatoryFields(false);\r\n    }\r\n\r\n    return () => {};\r\n  }, [data, title, selectedAuthor]);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        className={className}\r\n        onClosed={() => closeModal()}\r\n      >\r\n        <ModalHeader toggle={toggle} style={{ backgroundColor: \"#f7f7f7\" }}>\r\n          Add review\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n            <div className=\"form-field\">\r\n              Title:{\" \"}\r\n              <Input\r\n                placeholder=\"add a title\"\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              Author:\r\n              {!showAddNewAurthor ? (\r\n                <div>\r\n                  <>\r\n                    <CustomDropdown\r\n                      dropdownId=\"author\"\r\n                      menus={authorsList}\r\n                      setParentsAuthor={setAuthorFromDropdown}\r\n                      context=\"authors\"\r\n                      placeholder=\"Select author\"\r\n                    />{\" \"}\r\n                    or{\" \"}\r\n                    <span\r\n                      className=\"add-new-aurthor\"\r\n                      onClick={(e) => setShowAddNewAurthor(!showAddNewAurthor)}\r\n                    >\r\n                      <i className=\"fas fa-plus\"></i> Add new\r\n                    </span>\r\n                  </>\r\n                </div>\r\n              ) : (\r\n                <span className=\"row\">\r\n                  <span className=\"col-xs-7 col-sm-7 col-md-7 col-lg-7  \">\r\n                    <Input\r\n                      placeholder=\"add new author\"\r\n                      readOnly={readOnly}\r\n                      onChange={(e) => {\r\n                        setAuthor(e.target.value);\r\n                        setShowAddNewAurthor(!showAddNewAurthor);\r\n                      }}\r\n                      style={{ marginTop: \"10px\" }}\r\n                      value={author}\r\n                    />\r\n                  </span>\r\n                  <span\r\n                    className=\" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\"\r\n                    id=\"addIcon\"\r\n                    onClick={(e) => {\r\n                      addAuthor({\r\n                        variables: { authorName: author },\r\n                        refetchQueries: [{ query: AUTHORS }],\r\n                      });\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-plus\"></i>\r\n                  </span>\r\n                  <span\r\n                    className=\" col-xs-2 col-sm-2 col-md-2 col-lg-2 add-icon\"\r\n                    id=\"backIcon\"\r\n                    onClick={(e) => setShowAddNewAurthor(!showAddNewAurthor)}\r\n                  >\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                  </span>\r\n\r\n                  {/* <Tooltip placement=\"bottom\" isOpen={addTooltipOpen} target=\"addIcon\" toggle={addToggleTooltip}>\r\n                            Add \r\n                          </Tooltip>\r\n                          <Tooltip placement=\"bottom\" isOpen={backTooltipOpen} target=\"backIcon\" toggle={backToggleTooltip}>\r\n                            Back\r\n                          </Tooltip> */}\r\n                </span>\r\n              )}\r\n              <div></div>\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              Genre:{\" \"}\r\n              {/* <Input\r\n                placeholder=\"add genre\"\r\n                onClick={(e) => setShowDropdown(true)}\r\n                onChange={(e) => {\r\n                  setGenre(e.target.value);\r\n                }}\r\n              /> */}\r\n              <CustomGenreDropdown\r\n                dropdownId=\"genre\"\r\n                menus={genreList}\r\n                setParentsAuthor={setGenreFromDropdown}\r\n                context=\"genre\"\r\n                placeholder=\"Select genre\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n              How was it:{\" \"}\r\n              <textarea\r\n                placeholder=\"Short summary\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={(e) => {\r\n                  setDesc(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"secondary\"\r\n            disabled={hasAllMandatoryFields}\r\n            onClick={(e) => {\r\n              closeModal();\r\n              addReview({\r\n                variables: {\r\n                  title: title,\r\n                  author: selectedAuthor,\r\n                  genre: genre,\r\n                  desc: desc,\r\n                },\r\n                refetchQueries: [{ query: GET_REVIEW }],\r\n              });\r\n            }}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Add\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReviewModal;\r\n"]},"metadata":{},"sourceType":"module"}